# Copyright 2021 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
info:
  title: CloudBuild/BuildTrigger
  description: DCL Specification for the CloudBuild BuildTrigger resource
  x-dcl-has-iam: false
paths:
  get:
    description: The function used to get information about a BuildTrigger
    parameters:
    - name: BuildTrigger
      required: true
      description: A full instance of a BuildTrigger
  apply:
    description: The function used to apply information about a BuildTrigger
    parameters:
    - name: BuildTrigger
      required: true
      description: A full instance of a BuildTrigger
  delete:
    description: The function used to delete a BuildTrigger
    parameters:
    - name: BuildTrigger
      required: true
      description: A full instance of a BuildTrigger
  deleteAll:
    description: The function used to delete all BuildTrigger
    parameters:
    - name: project
      required: true
      schema:
        type: string
  list:
    description: The function used to list information about many BuildTrigger
    parameters:
    - name: project
      required: true
      schema:
        type: string
components:
  schemas:
    BuildTrigger:
      title: BuildTrigger
      x-dcl-id: projects/{{project}}/triggers/{{name}}
      x-dcl-parent-container: project
      type: object
      required:
      - name
      - project
      properties:
        build:
          type: object
          x-dcl-go-name: Build
          x-dcl-go-type: BuildTriggerBuild
          description: The build to run.
          x-dcl-conflicts:
          - filename
          required:
          - steps
          properties:
            images:
              type: array
              x-dcl-go-name: Images
              description: A list of images to be pushed upon the successful completion
                of all build steps. The images are pushed using the builder service
                account's credentials. The digests of the pushed images will be stored
                in the `Build` resource's results field. If any of the images fail
                to be pushed, the build status is marked `FAILURE`.
              x-dcl-list-type: list
              items:
                type: string
                x-dcl-go-type: string
            logsBucket:
              type: string
              x-dcl-go-name: LogsBucket
              description: Google Cloud Storage bucket where logs should be written
                (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
                Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
            queueTtl:
              type: string
              x-dcl-go-name: QueueTtl
              description: TTL in queue for this build. If provided and the build
                is enqueued longer than this value, the build will expire and the
                build status will be `EXPIRED`. The TTL starts ticking from create_time.
            secrets:
              type: array
              x-dcl-go-name: Secrets
              description: Secrets to decrypt using Cloud Key Management Service.
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: BuildTriggerBuildSecrets
                required:
                - kmsKeyName
                properties:
                  kmsKeyName:
                    type: string
                    x-dcl-go-name: KmsKeyName
                    description: Cloud KMS key name to use to decrypt these envs.
                  secretEnv:
                    type: object
                    additionalProperties:
                      type: string
                    x-dcl-go-name: SecretEnv
                    description: Map of environment variable name to its encrypted
                      value. Secret environment variables must be unique across all
                      of a build's secrets, and must be used by at least one build
                      step. Values can be at most 64 KB in size. There can be at most
                      100 secret values across all of a build's secrets.
            source:
              type: object
              x-dcl-go-name: Source
              x-dcl-go-type: BuildTriggerBuildSource
              description: The location of the source files to build.
              properties:
                repoSource:
                  type: object
                  x-dcl-go-name: RepoSource
                  x-dcl-go-type: BuildTriggerBuildSourceRepoSource
                  description: If provided, get the source from this location in a
                    Cloud Source Repository.
                  required:
                  - repoName
                  properties:
                    branchName:
                      type: string
                      x-dcl-go-name: BranchName
                      description: Regex matching branches to build. The syntax of
                        the regular expressions accepted is the syntax accepted by
                        RE2 and described at https://github.com/google/re2/wiki/Syntax
                    commitSha:
                      type: string
                      x-dcl-go-name: CommitSha
                      description: Explicit commit SHA to build.
                    dir:
                      type: string
                      x-dcl-go-name: Dir
                      description: Directory, relative to the source root, in which
                        to run the build. This must be a relative path. If a step's
                        `dir` is specified and is an absolute path, this value is
                        ignored for that step's execution.
                    invertRegex:
                      type: boolean
                      x-dcl-go-name: InvertRegex
                      description: Only trigger a build if the revision regex does
                        NOT match the revision regex.
                    projectId:
                      type: string
                      x-dcl-go-name: ProjectId
                      description: ID of the project that owns the Cloud Source Repository.
                        If omitted, the project ID requesting the build is assumed.
                      x-dcl-server-default: true
                    repoName:
                      type: string
                      x-dcl-go-name: RepoName
                      description: Required. Name of the Cloud Source Repository.
                    substitutions:
                      type: object
                      additionalProperties:
                        type: string
                      x-dcl-go-name: Substitutions
                      description: 'Substitutions to use in a triggered build. Should
                        only be used with RunBuildTrigger '
                    tagName:
                      type: string
                      x-dcl-go-name: TagName
                      description: Regex matching tags to build. The syntax of the
                        regular expressions accepted is the syntax accepted by RE2
                        and described at https://github.com/google/re2/wiki/Syntax
                storageSource:
                  type: object
                  x-dcl-go-name: StorageSource
                  x-dcl-go-type: BuildTriggerBuildSourceStorageSource
                  description: If provided, get the source from this location in Google
                    Cloud Storage.
                  required:
                  - bucket
                  - object
                  properties:
                    bucket:
                      type: string
                      x-dcl-go-name: Bucket
                      description: Google Cloud Storage bucket containing the source
                        (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).
                    generation:
                      type: string
                      x-dcl-go-name: Generation
                      description: Google Cloud Storage generation for the object.
                        If the generation is omitted, the latest generation will be
                        used.
                    object:
                      type: string
                      x-dcl-go-name: Object
                      description: Google Cloud Storage object containing the source.
                        This object must be a gzipped archive file (`.tar.gz`) containing
                        source to build.
            steps:
              type: array
              x-dcl-go-name: Steps
              description: Required. The operations to be performed on the workspace.
              x-dcl-list-type: list
              items:
                type: object
                x-dcl-go-type: BuildTriggerBuildSteps
                required:
                - name
                properties:
                  args:
                    type: array
                    x-dcl-go-name: Args
                    description: A list of arguments that will be presented to the
                      step when it is started. If the image used to run the step's
                      container has an entrypoint, the `args` are used as arguments
                      to that entrypoint. If the image does not define an entrypoint,
                      the first element in args is used as the entrypoint, and the
                      remainder will be used as arguments.
                    x-dcl-list-type: list
                    items:
                      type: string
                      x-dcl-go-type: string
                  dir:
                    type: string
                    x-dcl-go-name: Dir
                    description: Working directory to use when running this step's
                      container. If this value is a relative path, it is relative
                      to the build's working directory. If this value is absolute,
                      it may be outside the build's working directory, in which case
                      the contents of the path may not be persisted across build step
                      executions, unless a `volume` for that path is specified. If
                      the build specifies a `RepoSource` with `dir` and a step with
                      a `dir`, which specifies an absolute path, the `RepoSource`
                      `dir` is ignored for the step's execution.
                  entrypoint:
                    type: string
                    x-dcl-go-name: Entrypoint
                    description: Entrypoint to be used instead of the build step image's
                      default entrypoint. If unset, the image's default entrypoint
                      is used.
                  env:
                    type: array
                    x-dcl-go-name: Env
                    description: A list of environment variable definitions to be
                      used when running a step. The elements are of the form "KEY=VALUE"
                      for the environment variable "KEY" being given the value "VALUE".
                    x-dcl-list-type: list
                    items:
                      type: string
                      x-dcl-go-type: string
                  id:
                    type: string
                    x-dcl-go-name: Id
                    description: Unique identifier for this build step, used in `wait_for`
                      to reference this build step as a dependency.
                  name:
                    type: string
                    x-dcl-go-name: Name
                    description: Required. The name of the container image that will
                      run this particular build step. If the image is available in
                      the host's Docker daemon's cache, it will be run directly. If
                      not, the host will attempt to pull the image first, using the
                      builder service account's credentials if necessary. The Docker
                      daemon's cache will already have the latest versions of all
                      of the officially supported build steps ((https://github.com/GoogleCloudPlatform/cloud-builders)).
                      The Docker daemon will also have cached many of the layers for
                      some popular images, like "ubuntu", "debian", but they will
                      be refreshed at the time you attempt to use them. If you built
                      an image in a previous build step, it will be stored in the
                      host's Docker daemon's cache and is available to use as the
                      name for a later build step.
                  pullTiming:
                    type: object
                    x-dcl-go-name: PullTiming
                    x-dcl-go-type: BuildTriggerBuildStepsPullTiming
                    readOnly: true
                    description: Output only. Stores timing information for pulling
                      this build step's builder image only.
                    properties:
                      endTime:
                        type: string
                        x-dcl-go-name: EndTime
                        description: End of time span.
                      startTime:
                        type: string
                        x-dcl-go-name: StartTime
                        description: Start of time span.
                  secretEnv:
                    type: array
                    x-dcl-go-name: SecretEnv
                    description: A list of environment variables which are encrypted
                      using a Cloud Key Management Service crypto key. These values
                      must be specified in the build's `Secret`.
                    x-dcl-list-type: list
                    items:
                      type: string
                      x-dcl-go-type: string
                  status:
                    type: string
                    x-dcl-go-name: Status
                    x-dcl-go-type: BuildTriggerBuildStepsStatusEnum
                    readOnly: true
                    description: 'Output only. Status of the build step. At this time,
                      build step status is only updated on build completion; step
                      status is not updated in real-time as the build progresses.
                      Possible values: STATUS_UNKNOWN, QUEUED, WORKING, SUCCESS, FAILURE,
                      INTERNAL_ERROR, TIMEOUT, CANCELLED, EXPIRED'
                    enum:
                    - STATUS_UNKNOWN
                    - QUEUED
                    - WORKING
                    - SUCCESS
                    - FAILURE
                    - INTERNAL_ERROR
                    - TIMEOUT
                    - CANCELLED
                    - EXPIRED
                  timeout:
                    type: string
                    x-dcl-go-name: Timeout
                    description: Time limit for executing this build step. If not
                      defined, the step has no time limit and will be allowed to continue
                      to run until either it completes or the build itself times out.
                    default: 300s
                  timing:
                    type: object
                    x-dcl-go-name: Timing
                    x-dcl-go-type: BuildTriggerBuildStepsTiming
                    readOnly: true
                    description: Output only. Stores timing information for executing
                      this build step.
                    properties:
                      endTime:
                        type: string
                        x-dcl-go-name: EndTime
                        description: End of time span.
                      startTime:
                        type: string
                        x-dcl-go-name: StartTime
                        description: Start of time span.
                  volumes:
                    type: array
                    x-dcl-go-name: Volumes
                    description: List of volumes to mount into the build step. Each
                      volume is created as an empty volume prior to execution of the
                      build step. Upon completion of the build, volumes and their
                      contents are discarded. Using a named volume in only one step
                      is not valid as it is indicative of a build request with an
                      incorrect configuration.
                    x-dcl-list-type: list
                    items:
                      type: object
                      x-dcl-go-type: BuildTriggerBuildStepsVolumes
                      required:
                      - name
                      - path
                      properties:
                        name:
                          type: string
                          x-dcl-go-name: Name
                          description: Name of the volume to mount. Volume names must
                            be unique per build step and must be valid names for Docker
                            volumes. Each named volume must be used by at least two
                            build steps.
                        path:
                          type: string
                          x-dcl-go-name: Path
                          description: Path at which to mount the volume. Paths must
                            be absolute and cannot conflict with other volume paths
                            on the same build step or with certain reserved volume
                            paths.
                  waitFor:
                    type: array
                    x-dcl-go-name: WaitFor
                    description: The ID(s) of the step(s) that this build step depends
                      on. This build step will not start until all the build steps
                      in `wait_for` have completed successfully. If `wait_for` is
                      empty, this build step will start when all previous build steps
                      in the `Build.Steps` list have completed successfully.
                    x-dcl-list-type: list
                    items:
                      type: string
                      x-dcl-go-type: string
            substitutions:
              type: object
              additionalProperties:
                type: string
              x-dcl-go-name: Substitutions
              description: Substitutions data for `Build` resource.
            tags:
              type: array
              x-dcl-go-name: Tags
              description: Tags for annotation of a `Build`. These are not docker
                tags.
              x-dcl-list-type: list
              items:
                type: string
                x-dcl-go-type: string
            timeout:
              type: string
              x-dcl-go-name: Timeout
              description: Amount of time that this build should be allowed to run,
                to second granularity. If this amount of time elapses, work on the
                build will cease and the build status will be `TIMEOUT`. `timeout`
                starts ticking from `startTime`. Default time is ten minutes.
              default: 600s
        createTime:
          type: string
          x-dcl-go-name: CreateTime
          readOnly: true
          description: Output only. Time when the trigger was created.
          x-kubernetes-immutable: true
        description:
          type: string
          x-dcl-go-name: Description
          description: Human-readable description of this trigger.
        disabled:
          type: boolean
          x-dcl-go-name: Disabled
          description: If true, the trigger will never automatically execute a build.
        filename:
          type: string
          x-dcl-go-name: Filename
          description: 'Path, from the source root, to a file whose contents is used
            for the template. '
          x-dcl-conflicts:
          - build
        github:
          type: object
          x-dcl-go-name: Github
          x-dcl-go-type: BuildTriggerGithub
          description: GitHubEventsConfig describes the configuration of a trigger
            that creates a build whenever a GitHub event is received. Mutually exclusive
            with `trigger_template`.
          properties:
            name:
              type: string
              x-dcl-go-name: Name
              description: 'Name of the repository. For example: The name for https://github.com/googlecloudplatform/cloud-builders
                is "cloud-builders".'
            owner:
              type: string
              x-dcl-go-name: Owner
              description: 'Owner of the repository. For example: The owner for https://github.com/googlecloudplatform/cloud-builders
                is "googlecloudplatform".'
            pullRequest:
              type: object
              x-dcl-go-name: PullRequest
              x-dcl-go-type: BuildTriggerGithubPullRequest
              description: filter to match changes in pull requests.
              required:
              - branch
              properties:
                branch:
                  type: string
                  x-dcl-go-name: Branch
                  description: Regex of branches to match. The syntax of the regular
                    expressions accepted is the syntax accepted by RE2 and described
                    at https://github.com/google/re2/wiki/Syntax
                commentControl:
                  type: string
                  x-dcl-go-name: CommentControl
                  x-dcl-go-type: BuildTriggerGithubPullRequestCommentControlEnum
                  description: 'Configure builds to run whether a repository owner
                    or collaborator need to comment `/gcbrun`. Possible values: COMMENTS_DISABLED,
                    COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY'
                  enum:
                  - COMMENTS_DISABLED
                  - COMMENTS_ENABLED
                  - COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY
                invertRegex:
                  type: boolean
                  x-dcl-go-name: InvertRegex
                  description: If true, branches that do NOT match the git_ref will
                    trigger a build.
            push:
              type: object
              x-dcl-go-name: Push
              x-dcl-go-type: BuildTriggerGithubPush
              description: filter to match changes in refs like branches, tags.
              properties:
                branch:
                  type: string
                  x-dcl-go-name: Branch
                  description: Regexes matching branches to build. The syntax of the
                    regular expressions accepted is the syntax accepted by RE2 and
                    described at https://github.com/google/re2/wiki/Syntax
                invertRegex:
                  type: boolean
                  x-dcl-go-name: InvertRegex
                  description: When true, only trigger a build if the revision regex
                    does NOT match the git_ref regex.
                tag:
                  type: string
                  x-dcl-go-name: Tag
                  description: Regexes matching tags to build. The syntax of the regular
                    expressions accepted is the syntax accepted by RE2 and described
                    at https://github.com/google/re2/wiki/Syntax
        id:
          type: string
          x-dcl-go-name: Id
          readOnly: true
          description: Output only. Unique identifier of the trigger.
          x-kubernetes-immutable: true
        ignoredFiles:
          type: array
          x-dcl-go-name: IgnoredFiles
          description: ignored_files and included_files are file glob matches using
            https://golang.org/pkg/path/filepath/#Match extended with support for
            "**". If ignored_files and changed files are both empty, then they are
            not used to determine whether or not to trigger a build. If ignored_files
            is not empty, then we ignore any files that match any of the ignored_file
            globs. If the change has no files that are outside of the ignored_files
            globs, then we do not trigger a build.
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        includedFiles:
          type: array
          x-dcl-go-name: IncludedFiles
          description: If any of the files altered in the commit pass the ignored_files
            filter and included_files is empty, then as far as this filter is concerned,
            we should trigger the build. If any of the files altered in the commit
            pass the ignored_files filter and included_files is not empty, then we
            make sure that at least one of those files matches a included_files glob.
            If not, then we do not trigger a build.
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        name:
          type: string
          x-dcl-go-name: Name
          description: 'User-assigned name of the trigger. Must be unique within the
            project. Trigger names must meet the following requirements: + They must
            contain only alphanumeric characters and dashes. + They can be 1-64 characters
            long. + They must begin and end with an alphanumeric character.'
        project:
          type: string
          x-dcl-go-name: Project
          description: The project to run builds in.
          x-kubernetes-immutable: true
          x-dcl-references:
          - resource: Cloudresourcemanager/Project
            field: name
            parent: true
        substitutions:
          type: object
          additionalProperties:
            type: string
          x-dcl-go-name: Substitutions
          description: 'Substitutions for Build resource. The keys must match the
            following regular expression: `^_+$`.'
        tags:
          type: array
          x-dcl-go-name: Tags
          description: Tags for annotation of a `BuildTrigger`
          x-dcl-list-type: list
          items:
            type: string
            x-dcl-go-type: string
        triggerTemplate:
          type: object
          x-dcl-go-name: TriggerTemplate
          x-dcl-go-type: BuildTriggerTriggerTemplate
          description: Template describing the types of source changes to trigger
            a build. Branch and tag names in trigger templates are interpreted as
            regular expressions. Any branch or tag change that matches that regular
            expression will trigger a build. Mutually exclusive with `github`.
          properties:
            branchName:
              type: string
              x-dcl-go-name: BranchName
              description: Regex matching branches to build. The syntax of the regular
                expressions accepted is the syntax accepted by RE2 and described at
                https://github.com/google/re2/wiki/Syntax
            commitSha:
              type: string
              x-dcl-go-name: CommitSha
              description: Explicit commit SHA to build.
            dir:
              type: string
              x-dcl-go-name: Dir
              description: Directory, relative to the source root, in which to run
                the build. This must be a relative path. If a step's `dir` is specified
                and is an absolute path, this value is ignored for that step's execution.
            invertRegex:
              type: boolean
              x-dcl-go-name: InvertRegex
              description: Only trigger a build if the revision regex does NOT match
                the revision regex.
            projectId:
              type: string
              x-dcl-go-name: ProjectId
              description: ID of the project that owns the Cloud Source Repository.
                If omitted, the project ID requesting the build is assumed.
              x-dcl-server-default: true
            repoName:
              type: string
              x-dcl-go-name: RepoName
              description: Required. Name of the Cloud Source Repository.
              default: default
            tagName:
              type: string
              x-dcl-go-name: TagName
              description: Regex matching tags to build. The syntax of the regular
                expressions accepted is the syntax accepted by RE2 and described at
                https://github.com/google/re2/wiki/Syntax
