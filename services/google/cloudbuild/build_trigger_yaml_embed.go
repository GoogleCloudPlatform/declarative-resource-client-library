// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// GENERATED BY gen_go_data.go
// gen_go_data -package cloudbuild -var YAML_build_trigger blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/cloudbuild/build_trigger.yaml

package cloudbuild

// blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/cloudbuild/build_trigger.yaml
var YAML_build_trigger = []byte("info:\n  title: CloudBuild/BuildTrigger\n  description: DCL Specification for the CloudBuild BuildTrigger resource\n  x-dcl-has-iam: false\npaths:\n  get:\n    description: The function used to get information about a BuildTrigger\n    parameters:\n    - name: BuildTrigger\n      required: true\n      description: A full instance of a BuildTrigger\n  apply:\n    description: The function used to apply information about a BuildTrigger\n    parameters:\n    - name: BuildTrigger\n      required: true\n      description: A full instance of a BuildTrigger\n  delete:\n    description: The function used to delete a BuildTrigger\n    parameters:\n    - name: BuildTrigger\n      required: true\n      description: A full instance of a BuildTrigger\n  deleteAll:\n    description: The function used to delete all BuildTrigger\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n  list:\n    description: The function used to list information about many BuildTrigger\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\ncomponents:\n  schemas:\n    BuildTrigger:\n      title: BuildTrigger\n      x-dcl-id: projects/{{project}}/triggers/{{name}}\n      x-dcl-parent-container: project\n      type: object\n      required:\n      - name\n      - project\n      properties:\n        build:\n          type: object\n          x-dcl-go-name: Build\n          x-dcl-go-type: BuildTriggerBuild\n          description: The build to run.\n          x-dcl-conflicts:\n          - filename\n          required:\n          - steps\n          properties:\n            images:\n              type: array\n              x-dcl-go-name: Images\n              description: A list of images to be pushed upon the successful completion\n                of all build steps. The images are pushed using the builder service\n                account's credentials. The digests of the pushed images will be stored\n                in the `Build` resource's results field. If any of the images fail\n                to be pushed, the build status is marked `FAILURE`.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: string\n                x-dcl-go-type: string\n            logsBucket:\n              type: string\n              x-dcl-go-name: LogsBucket\n              description: Google Cloud Storage bucket where logs should be written\n                (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n                Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.\n            queueTtl:\n              type: string\n              x-dcl-go-name: QueueTtl\n              description: TTL in queue for this build. If provided and the build\n                is enqueued longer than this value, the build will expire and the\n                build status will be `EXPIRED`. The TTL starts ticking from create_time.\n            secrets:\n              type: array\n              x-dcl-go-name: Secrets\n              description: Secrets to decrypt using Cloud Key Management Service.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: object\n                x-dcl-go-type: BuildTriggerBuildSecrets\n                required:\n                - kmsKeyName\n                properties:\n                  kmsKeyName:\n                    type: string\n                    x-dcl-go-name: KmsKeyName\n                    description: Cloud KMS key name to use to decrypt these envs.\n                  secretEnv:\n                    type: object\n                    additionalProperties:\n                      type: string\n                    x-dcl-go-name: SecretEnv\n                    description: Map of environment variable name to its encrypted\n                      value. Secret environment variables must be unique across all\n                      of a build's secrets, and must be used by at least one build\n                      step. Values can be at most 64 KB in size. There can be at most\n                      100 secret values across all of a build's secrets.\n            source:\n              type: object\n              x-dcl-go-name: Source\n              x-dcl-go-type: BuildTriggerBuildSource\n              description: The location of the source files to build.\n              properties:\n                repoSource:\n                  type: object\n                  x-dcl-go-name: RepoSource\n                  x-dcl-go-type: BuildTriggerBuildSourceRepoSource\n                  description: If provided, get the source from this location in a\n                    Cloud Source Repository.\n                  required:\n                  - repoName\n                  properties:\n                    branchName:\n                      type: string\n                      x-dcl-go-name: BranchName\n                      description: Regex matching branches to build. The syntax of\n                        the regular expressions accepted is the syntax accepted by\n                        RE2 and described at https://github.com/google/re2/wiki/Syntax\n                    commitSha:\n                      type: string\n                      x-dcl-go-name: CommitSha\n                      description: Explicit commit SHA to build.\n                    dir:\n                      type: string\n                      x-dcl-go-name: Dir\n                      description: Directory, relative to the source root, in which\n                        to run the build. This must be a relative path. If a step's\n                        `dir` is specified and is an absolute path, this value is\n                        ignored for that step's execution.\n                    invertRegex:\n                      type: boolean\n                      x-dcl-go-name: InvertRegex\n                      description: Only trigger a build if the revision regex does\n                        NOT match the revision regex.\n                    projectId:\n                      type: string\n                      x-dcl-go-name: ProjectId\n                      description: ID of the project that owns the Cloud Source Repository.\n                        If omitted, the project ID requesting the build is assumed.\n                      x-dcl-server-default: true\n                    repoName:\n                      type: string\n                      x-dcl-go-name: RepoName\n                      description: Required. Name of the Cloud Source Repository.\n                    substitutions:\n                      type: object\n                      additionalProperties:\n                        type: string\n                      x-dcl-go-name: Substitutions\n                      description: 'Substitutions to use in a triggered build. Should\n                        only be used with RunBuildTrigger '\n                    tagName:\n                      type: string\n                      x-dcl-go-name: TagName\n                      description: Regex matching tags to build. The syntax of the\n                        regular expressions accepted is the syntax accepted by RE2\n                        and described at https://github.com/google/re2/wiki/Syntax\n                storageSource:\n                  type: object\n                  x-dcl-go-name: StorageSource\n                  x-dcl-go-type: BuildTriggerBuildSourceStorageSource\n                  description: If provided, get the source from this location in Google\n                    Cloud Storage.\n                  required:\n                  - bucket\n                  - object\n                  properties:\n                    bucket:\n                      type: string\n                      x-dcl-go-name: Bucket\n                      description: Google Cloud Storage bucket containing the source\n                        (see (https://cloud.google.com/storage/docs/bucket-naming#requirements)).\n                    generation:\n                      type: string\n                      x-dcl-go-name: Generation\n                      description: Google Cloud Storage generation for the object.\n                        If the generation is omitted, the latest generation will be\n                        used.\n                    object:\n                      type: string\n                      x-dcl-go-name: Object\n                      description: Google Cloud Storage object containing the source.\n                        This object must be a gzipped archive file (`.tar.gz`) containing\n                        source to build.\n            steps:\n              type: array\n              x-dcl-go-name: Steps\n              description: Required. The operations to be performed on the workspace.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: object\n                x-dcl-go-type: BuildTriggerBuildSteps\n                required:\n                - name\n                properties:\n                  args:\n                    type: array\n                    x-dcl-go-name: Args\n                    description: A list of arguments that will be presented to the\n                      step when it is started. If the image used to run the step's\n                      container has an entrypoint, the `args` are used as arguments\n                      to that entrypoint. If the image does not define an entrypoint,\n                      the first element in args is used as the entrypoint, and the\n                      remainder will be used as arguments.\n                    x-dcl-send-empty: true\n                    x-dcl-list-type: list\n                    items:\n                      type: string\n                      x-dcl-go-type: string\n                  dir:\n                    type: string\n                    x-dcl-go-name: Dir\n                    description: Working directory to use when running this step's\n                      container. If this value is a relative path, it is relative\n                      to the build's working directory. If this value is absolute,\n                      it may be outside the build's working directory, in which case\n                      the contents of the path may not be persisted across build step\n                      executions, unless a `volume` for that path is specified. If\n                      the build specifies a `RepoSource` with `dir` and a step with\n                      a `dir`, which specifies an absolute path, the `RepoSource`\n                      `dir` is ignored for the step's execution.\n                  entrypoint:\n                    type: string\n                    x-dcl-go-name: Entrypoint\n                    description: Entrypoint to be used instead of the build step image's\n                      default entrypoint. If unset, the image's default entrypoint\n                      is used.\n                  env:\n                    type: array\n                    x-dcl-go-name: Env\n                    description: A list of environment variable definitions to be\n                      used when running a step. The elements are of the form \"KEY=VALUE\"\n                      for the environment variable \"KEY\" being given the value \"VALUE\".\n                    x-dcl-send-empty: true\n                    x-dcl-list-type: list\n                    items:\n                      type: string\n                      x-dcl-go-type: string\n                  id:\n                    type: string\n                    x-dcl-go-name: Id\n                    description: Unique identifier for this build step, used in `wait_for`\n                      to reference this build step as a dependency.\n                  name:\n                    type: string\n                    x-dcl-go-name: Name\n                    description: Required. The name of the container image that will\n                      run this particular build step. If the image is available in\n                      the host's Docker daemon's cache, it will be run directly. If\n                      not, the host will attempt to pull the image first, using the\n                      builder service account's credentials if necessary. The Docker\n                      daemon's cache will already have the latest versions of all\n                      of the officially supported build steps ((https://github.com/GoogleCloudPlatform/cloud-builders)).\n                      The Docker daemon will also have cached many of the layers for\n                      some popular images, like \"ubuntu\", \"debian\", but they will\n                      be refreshed at the time you attempt to use them. If you built\n                      an image in a previous build step, it will be stored in the\n                      host's Docker daemon's cache and is available to use as the\n                      name for a later build step.\n                  pullTiming:\n                    type: object\n                    x-dcl-go-name: PullTiming\n                    x-dcl-go-type: BuildTriggerBuildStepsPullTiming\n                    readOnly: true\n                    description: Output only. Stores timing information for pulling\n                      this build step's builder image only.\n                    properties:\n                      endTime:\n                        type: string\n                        x-dcl-go-name: EndTime\n                        description: End of time span.\n                      startTime:\n                        type: string\n                        x-dcl-go-name: StartTime\n                        description: Start of time span.\n                  secretEnv:\n                    type: array\n                    x-dcl-go-name: SecretEnv\n                    description: A list of environment variables which are encrypted\n                      using a Cloud Key Management Service crypto key. These values\n                      must be specified in the build's `Secret`.\n                    x-dcl-send-empty: true\n                    x-dcl-list-type: list\n                    items:\n                      type: string\n                      x-dcl-go-type: string\n                  status:\n                    type: string\n                    x-dcl-go-name: Status\n                    x-dcl-go-type: BuildTriggerBuildStepsStatusEnum\n                    readOnly: true\n                    description: 'Output only. Status of the build step. At this time,\n                      build step status is only updated on build completion; step\n                      status is not updated in real-time as the build progresses.\n                      Possible values: STATUS_UNKNOWN, QUEUED, WORKING, SUCCESS, FAILURE,\n                      INTERNAL_ERROR, TIMEOUT, CANCELLED, EXPIRED'\n                    enum:\n                    - STATUS_UNKNOWN\n                    - QUEUED\n                    - WORKING\n                    - SUCCESS\n                    - FAILURE\n                    - INTERNAL_ERROR\n                    - TIMEOUT\n                    - CANCELLED\n                    - EXPIRED\n                  timeout:\n                    type: string\n                    x-dcl-go-name: Timeout\n                    description: Time limit for executing this build step. If not\n                      defined, the step has no time limit and will be allowed to continue\n                      to run until either it completes or the build itself times out.\n                    default: 300s\n                  timing:\n                    type: object\n                    x-dcl-go-name: Timing\n                    x-dcl-go-type: BuildTriggerBuildStepsTiming\n                    readOnly: true\n                    description: Output only. Stores timing information for executing\n                      this build step.\n                    properties:\n                      endTime:\n                        type: string\n                        x-dcl-go-name: EndTime\n                        description: End of time span.\n                      startTime:\n                        type: string\n                        x-dcl-go-name: StartTime\n                        description: Start of time span.\n                  volumes:\n                    type: array\n                    x-dcl-go-name: Volumes\n                    description: List of volumes to mount into the build step. Each\n                      volume is created as an empty volume prior to execution of the\n                      build step. Upon completion of the build, volumes and their\n                      contents are discarded. Using a named volume in only one step\n                      is not valid as it is indicative of a build request with an\n                      incorrect configuration.\n                    x-dcl-send-empty: true\n                    x-dcl-list-type: list\n                    items:\n                      type: object\n                      x-dcl-go-type: BuildTriggerBuildStepsVolumes\n                      required:\n                      - name\n                      - path\n                      properties:\n                        name:\n                          type: string\n                          x-dcl-go-name: Name\n                          description: Name of the volume to mount. Volume names must\n                            be unique per build step and must be valid names for Docker\n                            volumes. Each named volume must be used by at least two\n                            build steps.\n                        path:\n                          type: string\n                          x-dcl-go-name: Path\n                          description: Path at which to mount the volume. Paths must\n                            be absolute and cannot conflict with other volume paths\n                            on the same build step or with certain reserved volume\n                            paths.\n                  waitFor:\n                    type: array\n                    x-dcl-go-name: WaitFor\n                    description: The ID(s) of the step(s) that this build step depends\n                      on. This build step will not start until all the build steps\n                      in `wait_for` have completed successfully. If `wait_for` is\n                      empty, this build step will start when all previous build steps\n                      in the `Build.Steps` list have completed successfully.\n                    x-dcl-send-empty: true\n                    x-dcl-list-type: list\n                    items:\n                      type: string\n                      x-dcl-go-type: string\n            substitutions:\n              type: object\n              additionalProperties:\n                type: string\n              x-dcl-go-name: Substitutions\n              description: Substitutions data for `Build` resource.\n            tags:\n              type: array\n              x-dcl-go-name: Tags\n              description: Tags for annotation of a `Build`. These are not docker\n                tags.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: string\n                x-dcl-go-type: string\n            timeout:\n              type: string\n              x-dcl-go-name: Timeout\n              description: Amount of time that this build should be allowed to run,\n                to second granularity. If this amount of time elapses, work on the\n                build will cease and the build status will be `TIMEOUT`. `timeout`\n                starts ticking from `startTime`. Default time is ten minutes.\n              default: 600s\n        createTime:\n          type: string\n          x-dcl-go-name: CreateTime\n          readOnly: true\n          description: Output only. Time when the trigger was created.\n          x-kubernetes-immutable: true\n        description:\n          type: string\n          x-dcl-go-name: Description\n          description: Human-readable description of this trigger.\n        disabled:\n          type: boolean\n          x-dcl-go-name: Disabled\n          description: If true, the trigger will never automatically execute a build.\n        filename:\n          type: string\n          x-dcl-go-name: Filename\n          description: 'Path, from the source root, to a file whose contents is used\n            for the template. '\n          x-dcl-conflicts:\n          - build\n        github:\n          type: object\n          x-dcl-go-name: Github\n          x-dcl-go-type: BuildTriggerGithub\n          description: GitHubEventsConfig describes the configuration of a trigger\n            that creates a build whenever a GitHub event is received. Mutually exclusive\n            with `trigger_template`.\n          properties:\n            name:\n              type: string\n              x-dcl-go-name: Name\n              description: 'Name of the repository. For example: The name for https://github.com/googlecloudplatform/cloud-builders\n                is \"cloud-builders\".'\n            owner:\n              type: string\n              x-dcl-go-name: Owner\n              description: 'Owner of the repository. For example: The owner for https://github.com/googlecloudplatform/cloud-builders\n                is \"googlecloudplatform\".'\n            pullRequest:\n              type: object\n              x-dcl-go-name: PullRequest\n              x-dcl-go-type: BuildTriggerGithubPullRequest\n              description: filter to match changes in pull requests.\n              required:\n              - branch\n              properties:\n                branch:\n                  type: string\n                  x-dcl-go-name: Branch\n                  description: Regex of branches to match. The syntax of the regular\n                    expressions accepted is the syntax accepted by RE2 and described\n                    at https://github.com/google/re2/wiki/Syntax\n                commentControl:\n                  type: string\n                  x-dcl-go-name: CommentControl\n                  x-dcl-go-type: BuildTriggerGithubPullRequestCommentControlEnum\n                  description: 'Configure builds to run whether a repository owner\n                    or collaborator need to comment `/gcbrun`. Possible values: COMMENTS_DISABLED,\n                    COMMENTS_ENABLED, COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY'\n                  enum:\n                  - COMMENTS_DISABLED\n                  - COMMENTS_ENABLED\n                  - COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY\n                invertRegex:\n                  type: boolean\n                  x-dcl-go-name: InvertRegex\n                  description: If true, branches that do NOT match the git_ref will\n                    trigger a build.\n            push:\n              type: object\n              x-dcl-go-name: Push\n              x-dcl-go-type: BuildTriggerGithubPush\n              description: filter to match changes in refs like branches, tags.\n              properties:\n                branch:\n                  type: string\n                  x-dcl-go-name: Branch\n                  description: Regexes matching branches to build. The syntax of the\n                    regular expressions accepted is the syntax accepted by RE2 and\n                    described at https://github.com/google/re2/wiki/Syntax\n                invertRegex:\n                  type: boolean\n                  x-dcl-go-name: InvertRegex\n                  description: When true, only trigger a build if the revision regex\n                    does NOT match the git_ref regex.\n                tag:\n                  type: string\n                  x-dcl-go-name: Tag\n                  description: Regexes matching tags to build. The syntax of the regular\n                    expressions accepted is the syntax accepted by RE2 and described\n                    at https://github.com/google/re2/wiki/Syntax\n        id:\n          type: string\n          x-dcl-go-name: Id\n          readOnly: true\n          description: Output only. Unique identifier of the trigger.\n          x-kubernetes-immutable: true\n        ignoredFiles:\n          type: array\n          x-dcl-go-name: IgnoredFiles\n          description: ignored_files and included_files are file glob matches using\n            https://golang.org/pkg/path/filepath/#Match extended with support for\n            \"**\". If ignored_files and changed files are both empty, then they are\n            not used to determine whether or not to trigger a build. If ignored_files\n            is not empty, then we ignore any files that match any of the ignored_file\n            globs. If the change has no files that are outside of the ignored_files\n            globs, then we do not trigger a build.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n        includedFiles:\n          type: array\n          x-dcl-go-name: IncludedFiles\n          description: If any of the files altered in the commit pass the ignored_files\n            filter and included_files is empty, then as far as this filter is concerned,\n            we should trigger the build. If any of the files altered in the commit\n            pass the ignored_files filter and included_files is not empty, then we\n            make sure that at least one of those files matches a included_files glob.\n            If not, then we do not trigger a build.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n        name:\n          type: string\n          x-dcl-go-name: Name\n          description: 'User-assigned name of the trigger. Must be unique within the\n            project. Trigger names must meet the following requirements: + They must\n            contain only alphanumeric characters and dashes. + They can be 1-64 characters\n            long. + They must begin and end with an alphanumeric character.'\n        project:\n          type: string\n          x-dcl-go-name: Project\n          description: The project to run builds in.\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Cloudresourcemanager/Project\n            field: name\n            parent: true\n        substitutions:\n          type: object\n          additionalProperties:\n            type: string\n          x-dcl-go-name: Substitutions\n          description: 'Substitutions for Build resource. The keys must match the\n            following regular expression: `^_+$`.'\n        tags:\n          type: array\n          x-dcl-go-name: Tags\n          description: Tags for annotation of a `BuildTrigger`\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n        triggerTemplate:\n          type: object\n          x-dcl-go-name: TriggerTemplate\n          x-dcl-go-type: BuildTriggerTriggerTemplate\n          description: Template describing the types of source changes to trigger\n            a build. Branch and tag names in trigger templates are interpreted as\n            regular expressions. Any branch or tag change that matches that regular\n            expression will trigger a build. Mutually exclusive with `github`.\n          properties:\n            branchName:\n              type: string\n              x-dcl-go-name: BranchName\n              description: Regex matching branches to build. The syntax of the regular\n                expressions accepted is the syntax accepted by RE2 and described at\n                https://github.com/google/re2/wiki/Syntax\n            commitSha:\n              type: string\n              x-dcl-go-name: CommitSha\n              description: Explicit commit SHA to build.\n            dir:\n              type: string\n              x-dcl-go-name: Dir\n              description: Directory, relative to the source root, in which to run\n                the build. This must be a relative path. If a step's `dir` is specified\n                and is an absolute path, this value is ignored for that step's execution.\n            invertRegex:\n              type: boolean\n              x-dcl-go-name: InvertRegex\n              description: Only trigger a build if the revision regex does NOT match\n                the revision regex.\n            projectId:\n              type: string\n              x-dcl-go-name: ProjectId\n              description: ID of the project that owns the Cloud Source Repository.\n                If omitted, the project ID requesting the build is assumed.\n              x-dcl-server-default: true\n            repoName:\n              type: string\n              x-dcl-go-name: RepoName\n              description: Required. Name of the Cloud Source Repository.\n              default: default\n            tagName:\n              type: string\n              x-dcl-go-name: TagName\n              description: Regex matching tags to build. The syntax of the regular\n                expressions accepted is the syntax accepted by RE2 and described at\n                https://github.com/google/re2/wiki/Syntax\n")

// 29047 bytes
// MD5: 44d471b6af8cebc191106ea2fa99a5a3
