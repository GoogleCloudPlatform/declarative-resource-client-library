// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// GENERATED BY gen_go_data.go
// gen_go_data -package appengine -var YAML_domain_mapping blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/appengine/domain_mapping.yaml

package appengine

// blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/appengine/domain_mapping.yaml
var YAML_domain_mapping = []byte("info:\n  title: AppEngine/DomainMapping\n  description: DCL Specification for the AppEngine DomainMapping resource\n  x-dcl-has-iam: false\npaths:\n  get:\n    description: The function used to get information about a DomainMapping\n    parameters:\n    - name: DomainMapping\n      required: true\n      description: A full instance of a DomainMapping\n  apply:\n    description: The function used to apply information about a DomainMapping\n    parameters:\n    - name: DomainMapping\n      required: true\n      description: A full instance of a DomainMapping\n  delete:\n    description: The function used to delete a DomainMapping\n    parameters:\n    - name: DomainMapping\n      required: true\n      description: A full instance of a DomainMapping\n  deleteAll:\n    description: The function used to delete all DomainMapping\n    parameters:\n    - name: app\n      required: true\n      schema:\n        type: string\n  list:\n    description: The function used to list information about many DomainMapping\n    parameters:\n    - name: app\n      required: true\n      schema:\n        type: string\ncomponents:\n  schemas:\n    DomainMapping:\n      title: DomainMapping\n      x-dcl-id: apps/{{app}}/domainMappings/{{name}}\n      type: object\n      required:\n      - app\n      properties:\n        app:\n          type: string\n          x-dcl-go-name: App\n          description: The app for the resource\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Appengine/Application\n            field: name\n            parent: true\n        name:\n          type: string\n          x-dcl-go-name: Name\n          description: 'Relative name of the domain serving the application. Example:\n            `example.com`.'\n          x-kubernetes-immutable: true\n        resourceRecords:\n          type: array\n          x-dcl-go-name: ResourceRecords\n          readOnly: true\n          description: The resource records required to configure this domain mapping.\n            These records must be added to the domain's DNS configuration in order\n            to serve the application via this domain mapping. @OutputOnly\n          x-kubernetes-immutable: true\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: object\n            x-dcl-go-type: DomainMappingResourceRecords\n            properties:\n              name:\n                type: string\n                x-dcl-go-name: Name\n                description: 'Relative name of the object affected by this record.\n                  Only applicable for `CNAME` records. Example: ''www''.'\n                x-kubernetes-immutable: true\n              rrdata:\n                type: string\n                x-dcl-go-name: Rrdata\n                description: Data for this record. Values vary by record type, as\n                  defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1).\n                x-kubernetes-immutable: true\n              type:\n                type: string\n                x-dcl-go-name: Type\n                x-dcl-go-type: DomainMappingResourceRecordsTypeEnum\n                description: 'Resource record type. Example: `AAAA`. Possible values:\n                  DATABASE_TYPE_UNSPECIFIED, CLOUD_DATASTORE, CLOUD_FIRESTORE, CLOUD_DATASTORE_COMPATIBILITY'\n                x-kubernetes-immutable: true\n                enum:\n                - DATABASE_TYPE_UNSPECIFIED\n                - CLOUD_DATASTORE\n                - CLOUD_FIRESTORE\n                - CLOUD_DATASTORE_COMPATIBILITY\n        selfLink:\n          type: string\n          x-dcl-go-name: SelfLink\n          description: 'Full path to the `DomainMapping` resource in the API. Example:\n            `apps/myapp/domainMapping/example.com`. @OutputOnly'\n          x-kubernetes-immutable: true\n        sslSettings:\n          type: object\n          x-dcl-go-name: SslSettings\n          x-dcl-go-type: DomainMappingSslSettings\n          description: SSL configuration for this domain. If unconfigured, this domain\n            will not serve with SSL.\n          properties:\n            certificateId:\n              type: string\n              x-dcl-go-name: CertificateId\n              description: 'ID of the `AuthorizedCertificate` resource configuring\n                SSL for the application. Clearing this field will remove SSL support.\n                By default, a managed certificate is automatically created for every\n                domain mapping. To omit SSL support or to configure SSL manually,\n                specify `SslManagementType.MANUAL` on a `CREATE` or `UPDATE` request.\n                You must be authorized to administer the `AuthorizedCertificate` resource\n                to manually map it to a `DomainMapping` resource. Example: `12345`.'\n            pendingManagedCertificateId:\n              type: string\n              x-dcl-go-name: PendingManagedCertificateId\n              readOnly: true\n              description: ID of the managed `AuthorizedCertificate` resource currently\n                being provisioned, if applicable. Until the new managed certificate\n                has been successfully provisioned, the previous SSL state will be\n                preserved. Once the provisioning process completes, the `certificate_id`\n                field will reflect the new managed certificate and this field will\n                be left empty. To remove SSL support while there is still a pending\n                managed certificate, clear the `certificate_id` field with an `UpdateDomainMappingRequest`.\n                @OutputOnly\n            sslManagementType:\n              type: string\n              x-dcl-go-name: SslManagementType\n              x-dcl-go-type: DomainMappingSslSettingsSslManagementTypeEnum\n              description: SSL management type for this domain. If `AUTOMATIC`, a\n                managed certificate is automatically provisioned. If `MANUAL`, `certificate_id`\n                must be manually specified in order to configure SSL for this domain.\n              enum:\n              - AUTOMATIC\n              - MANUAL\n")

// 6047 bytes
// MD5: dacb0cb0a29b6ed424a22c8b7664accd
