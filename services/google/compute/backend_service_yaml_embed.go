// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// GENERATED BY gen_go_data.go
// gen_go_data -package compute -var YAML_backend_service blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/compute/backend_service.yaml

package compute

// blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/compute/backend_service.yaml
var YAML_backend_service = []byte("info:\n  title: Compute/BackendService\n  description: DCL Specification for the Compute BackendService resource\n  x-dcl-has-iam: false\npaths:\n  get:\n    description: The function used to get information about a BackendService\n    parameters:\n    - name: BackendService\n      required: true\n      description: A full instance of a BackendService\n  apply:\n    description: The function used to apply information about a BackendService\n    parameters:\n    - name: BackendService\n      required: true\n      description: A full instance of a BackendService\n  delete:\n    description: The function used to delete a BackendService\n    parameters:\n    - name: BackendService\n      required: true\n      description: A full instance of a BackendService\n  deleteAll:\n    description: The function used to delete all BackendService\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n    - name: location\n      required: true\n      schema:\n        type: string\n  list:\n    description: The function used to list information about many BackendService\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n    - name: location\n      required: true\n      schema:\n        type: string\ncomponents:\n  schemas:\n    BackendService:\n      title: BackendService\n      x-dcl-id: projects/{{project}}/global/backendServices/{{name}}\n      x-dcl-locations:\n      - global\n      - region\n      x-dcl-uses-state-hint: true\n      x-dcl-parent-container: project\n      type: object\n      required:\n      - name\n      - project\n      properties:\n        affinityCookieTtlSec:\n          type: integer\n          format: int64\n          x-dcl-go-name: AffinityCookieTtlSec\n          description: Lifetime of cookies in seconds. Only applicable if the `loadBalancingScheme`\n            is `EXTERNAL`, `INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED`, the `protocol`\n            is `HTTP` or `HTTPS`, and the `sessionAffinity` is `GENERATED_COOKIE`\n            or `HTTP_COOKIE`. If set to 0, the cookie is non-persistent and lasts\n            only until the end of the browser session (or equivalent). The maximum\n            allowed value is one day (86,400). Not supported when the backend service\n            is referenced by a URL map that is bound to target gRPC proxy that has\n            `validateForProxyless` field set to true.\n        backends:\n          type: array\n          x-dcl-go-name: Backends\n          description: The list of backends that serve this BackendService.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: object\n            x-dcl-go-type: BackendServiceBackends\n            properties:\n              balancingMode:\n                type: string\n                x-dcl-go-name: BalancingMode\n                x-dcl-go-type: BackendServiceBackendsBalancingModeEnum\n                description: 'Specifies how to determine whether the backend of a\n                  load balancer can handle additional traffic or is fully loaded.\n                  For usage guidelines, see (/load-balancing/docs/backend-service#connection_balancing_mode).\n                  Possible values: UTILIZATION, RATE, CONNECTION'\n                enum:\n                - UTILIZATION\n                - RATE\n                - CONNECTION\n              capacityScaler:\n                type: number\n                format: double\n                x-dcl-go-name: CapacityScaler\n                description: 'A multiplier applied to the backend''s target capacity\n                  of its balancing mode. The default value is `1`, which means the\n                  group serves up to 100% of its configured capacity (depending on\n                  `balancingMode`). A setting of `0` means the group is completely\n                  drained, offering 0% of its available capacity. The valid ranges\n                  are `0.0` and . You cannot configure a setting larger than `0` and\n                  smaller than `0.1`. You cannot configure a setting of `0` when there\n                  is only one backend attached to the backend service. Not supported\n                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing'\n              description:\n                type: string\n                x-dcl-go-name: Description\n                description: An optional description of this resource. Provide this\n                  property when you create the resource.\n              failover:\n                type: boolean\n                x-dcl-go-name: Failover\n                description: This field designates whether this is a failover backend.\n                  More than one failover backend can be configured for a given BackendService.\n              group:\n                type: string\n                x-dcl-go-name: Group\n                description: The fully-qualified URL of an instance group or network\n                  endpoint group (NEG) resource. The type of backend that a backend\n                  service supports depends on the backend service's `loadBalancingScheme`.\n                  - When the `loadBalancingScheme` for the backend service is `EXTERNAL`\n                  (except Network Load Balancing), ` INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED\n                  `, the backend can be either an instance group or a NEG. The backends\n                  on the backend service must be either all instance groups or all\n                  NEGs. You cannot mix instance group and NEG backends on the same\n                  backend service. - When the `loadBalancingScheme` for the backend\n                  service is `EXTERNAL` for Network Load Balancing or `INTERNAL` for\n                  Internal TCP/UDP Load Balancing, the backend must be an instance\n                  group. NEGs are not supported. For regional services, the backend\n                  must be in the same region as the backend service. You must use\n                  the **fully-qualified** URL (starting with `https://www.googleapis.com/`)\n                  to specify the instance group or NEG. Partial URLs are not supported.\n                x-dcl-references:\n                - resource: Compute/InstanceGroup\n                  field: selfLink\n                - resource: Compute/NetworkEndpointGroup\n                  field: selfLink\n              maxConnections:\n                type: integer\n                format: int64\n                x-dcl-go-name: MaxConnections\n                description: 'Defines a target maximum number of simultaneous connections.\n                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend''s `balancingMode` is `RATE`. Not supported\n                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing'\n              maxConnectionsPerEndpoint:\n                type: integer\n                format: int64\n                x-dcl-go-name: MaxConnectionsPerEndpoint\n                description: 'Defines a target maximum number of simultaneous connections.\n                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend''s `balancingMode` is `RATE`. Not supported\n                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing.'\n              maxConnectionsPerInstance:\n                type: integer\n                format: int64\n                x-dcl-go-name: MaxConnectionsPerInstance\n                description: 'Defines a target maximum number of simultaneous connections.\n                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend''s `balancingMode` is `RATE`. Not supported\n                  by: - Internal TCP/UDP Load Balancing - Network Load Balancing.'\n              maxRate:\n                type: integer\n                format: int64\n                x-dcl-go-name: MaxRate\n                description: Defines a maximum number of HTTP requests per second\n                  (RPS). For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend's `balancingMode` is `CONNECTION`.\n              maxRatePerEndpoint:\n                type: number\n                format: double\n                x-dcl-go-name: MaxRatePerEndpoint\n                description: Defines a maximum target for requests per second (RPS).\n                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend's `balancingMode` is `CONNECTION`.\n              maxRatePerInstance:\n                type: number\n                format: double\n                x-dcl-go-name: MaxRatePerInstance\n                description: Defines a maximum target for requests per second (RPS).\n                  For usage guidelines, see (/load-balancing/docs/backend-service#utilization_balancing_mode).\n                  Not available if the backend's `balancingMode` is `CONNECTION`.\n              maxUtilization:\n                type: number\n                format: double\n                x-dcl-go-name: MaxUtilization\n        cdnPolicy:\n          type: object\n          x-dcl-go-name: CdnPolicy\n          x-dcl-go-type: BackendServiceCdnPolicy\n          description: Cloud CDN configuration for this BackendService. Only available\n            for external HTTP(S) Load Balancing.\n          x-dcl-conflicts:\n          - iap\n          properties:\n            bypassCacheOnRequestHeaders:\n              type: array\n              x-dcl-go-name: BypassCacheOnRequestHeaders\n              description: Bypass the cache when the specified request headers are\n                matched - e.g. Pragma or Authorization headers. Up to 5 headers can\n                be specified. The cache is bypassed for all cdnPolicy.cacheMode settings.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: object\n                x-dcl-go-type: BackendServiceCdnPolicyBypassCacheOnRequestHeaders\n                properties:\n                  headerName:\n                    type: string\n                    x-dcl-go-name: HeaderName\n                    description: The header field name to match on when bypassing\n                      cache. Values are case-insensitive.\n            cacheKeyPolicy:\n              type: object\n              x-dcl-go-name: CacheKeyPolicy\n              x-dcl-go-type: BackendServiceCdnPolicyCacheKeyPolicy\n              description: The CacheKeyPolicy for this CdnPolicy.\n              properties:\n                includeHost:\n                  type: boolean\n                  x-dcl-go-name: IncludeHost\n                  description: If true, requests to different hosts will be cached\n                    separately.\n                includeHttpHeaders:\n                  type: array\n                  x-dcl-go-name: IncludeHttpHeaders\n                  description: Allows HTTP request headers (by name) to be used in\n                    the cache key.\n                  x-dcl-send-empty: true\n                  x-dcl-list-type: list\n                  items:\n                    type: string\n                    x-dcl-go-type: string\n                includeNamedCookies:\n                  type: array\n                  x-dcl-go-name: IncludeNamedCookies\n                  description: Allows HTTP cookies (by name) to be used in the cache\n                    key. The name=value pair will be used in the cache key Cloud CDN\n                    generates.\n                  x-dcl-send-empty: true\n                  x-dcl-list-type: list\n                  items:\n                    type: string\n                    x-dcl-go-type: string\n                includeProtocol:\n                  type: boolean\n                  x-dcl-go-name: IncludeProtocol\n                  description: If true, http and https requests will be cached separately.\n                includeQueryString:\n                  type: boolean\n                  x-dcl-go-name: IncludeQueryString\n                  description: If true, include query string parameters in the cache\n                    key according to query_string_whitelist and query_string_blacklist.\n                    If neither is set, the entire query string will be included. If\n                    false, the query string will be excluded from the cache key entirely.\n                queryStringBlacklist:\n                  type: array\n                  x-dcl-go-name: QueryStringBlacklist\n                  description: Names of query string parameters to exclude in cache\n                    keys. All other parameters will be included. Either specify query_string_whitelist\n                    or query_string_blacklist, not both. '&' and '=' will be percent\n                    encoded and not treated as delimiters.\n                  x-dcl-send-empty: true\n                  x-dcl-list-type: list\n                  items:\n                    type: string\n                    x-dcl-go-type: string\n                queryStringWhitelist:\n                  type: array\n                  x-dcl-go-name: QueryStringWhitelist\n                  description: Names of query string parameters to include in cache\n                    keys. All other parameters will be excluded. Either specify query_string_whitelist\n                    or query_string_blacklist, not both. '&' and '=' will be percent\n                    encoded and not treated as delimiters.\n                  x-dcl-send-empty: true\n                  x-dcl-list-type: list\n                  items:\n                    type: string\n                    x-dcl-go-type: string\n            cacheMode:\n              type: string\n              x-dcl-go-name: CacheMode\n              x-dcl-go-type: BackendServiceCdnPolicyCacheModeEnum\n              description: 'Specifies the cache setting for all responses from this\n                backend. The possible values are: `USE_ORIGIN_HEADERS` Requires the\n                origin to set valid caching headers to cache content. Responses without\n                these headers will not be cached at Google''s edge, and will require\n                a full trip to the origin on every request, potentially impacting\n                performance and increasing load on the origin server. `FORCE_CACHE_ALL`\n                Cache all content, ignoring any \"private\", \"no-store\" or \"no-cache\"\n                directives in Cache-Control response headers. Warning: this may result\n                in Cloud CDN caching private, per-user (user identifiable) content.\n                `CACHE_ALL_STATIC` Automatically cache static content, including common\n                image formats, media (video and audio), and web assets (JavaScript\n                and CSS). Requests and responses that are marked as uncacheable, as\n                well as dynamic content (including HTML), will not be cached. Possible\n                values: INVALID_CACHE_MODE, USE_ORIGIN_HEADERS, FORCE_CACHE_ALL, CACHE_ALL_STATIC'\n              enum:\n              - INVALID_CACHE_MODE\n              - USE_ORIGIN_HEADERS\n              - FORCE_CACHE_ALL\n              - CACHE_ALL_STATIC\n            clientTtl:\n              type: integer\n              format: int64\n              x-dcl-go-name: ClientTtl\n              description: Specifies a separate client (e.g. browser client) maximum\n                TTL. This is used to clamp the max-age (or Expires) value sent to\n                the client. With FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl\n                is used for the response max-age directive, along with a \"public\"\n                directive. For cacheable content in CACHE_ALL_STATIC mode, client_ttl\n                clamps the max-age from the origin (if specified), or else sets the\n                response max-age directive to the lesser of the client_ttl and default_ttl,\n                and also ensures a \"public\" cache-control directive is present. If\n                a client TTL is not specified, a default value (1 hour) will be used.\n                The maximum allowed value is 86400s (1 day).\n            defaultTtl:\n              type: integer\n              format: int64\n              x-dcl-go-name: DefaultTtl\n              description: Specifies the default TTL for cached content served by\n                this origin for responses that do not have an existing valid TTL (max-age\n                or s-max-age). Setting a TTL of \"0\" means \"always revalidate\". The\n                value of defaultTTL cannot be set to a value greater than that of\n                maxTTL, but can be equal. When the cacheMode is set to `FORCE_CACHE_ALL`,\n                the defaultTTL will overwrite the TTL set in all responses. The maximum\n                allowed value is 31,622,400s (1 year), noting that infrequently accessed\n                objects may be evicted from the cache before the defined TTL.\n            maxTtl:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxTtl\n              description: Specifies the maximum allowed TTL for cached content served\n                by this origin. Cache directives that attempt to set a max-age or\n                s-maxage higher than this, or an Expires header more than maxTTL seconds\n                in the future will be capped at the value of maxTTL, as if it were\n                the value of an s-maxage Cache-Control directive. Headers sent to\n                the client will not be modified. Setting a TTL of \"0\" means \"always\n                revalidate\". The maximum allowed value is 31,622,400s (1 year), noting\n                that infrequently accessed objects may be evicted from the cache before\n                the defined TTL.\n            negativeCaching:\n              type: boolean\n              x-dcl-go-name: NegativeCaching\n              description: 'Negative caching allows per-status code TTLs to be set,\n                in order to apply fine-grained caching for common errors or redirects.\n                This can reduce the load on your origin and improve end-user experience\n                by reducing response latency. When the cache mode is set to CACHE_ALL_STATIC\n                or USE_ORIGIN_HEADERS, negative caching applies to responses with\n                the specified response code that lack any Cache-Control, Expires,\n                or Pragma: no-cache directives. When the cache mode is set to FORCE_CACHE_ALL,\n                negative caching applies to all responses with the specified response\n                code, and override any caching headers. By default, Cloud CDN will\n                apply the following default TTLs to these status codes: HTTP 300 (Multiple\n                Choice), 301, 308 (Permanent Redirects): 10m HTTP 404 (Not Found),\n                410 (Gone), 451 (Unavailable For Legal Reasons): 120s HTTP 405 (Method\n                Not Found), 421 (Misdirected Request), 501 (Not Implemented): 60s.\n                These defaults can be overridden in negative_caching_policy.'\n            negativeCachingPolicy:\n              type: array\n              x-dcl-go-name: NegativeCachingPolicy\n              description: Sets a cache TTL for the specified HTTP status code. negative_caching\n                must be enabled to configure negative_caching_policy. Omitting the\n                policy and leaving negative_caching enabled will use Cloud CDN's default\n                cache TTLs. Note that when specifying an explicit negative_caching_policy,\n                you should take care to specify a cache TTL for all response codes\n                that you wish to cache. Cloud CDN will not apply any default negative\n                caching when a policy exists.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: object\n                x-dcl-go-type: BackendServiceCdnPolicyNegativeCachingPolicy\n                properties:\n                  code:\n                    type: integer\n                    format: int64\n                    x-dcl-go-name: Code\n                    description: The HTTP status code to define a TTL against. Only\n                      HTTP status codes 300, 301, 302, 307, 308, 404, 405, 410, 421,\n                      451 and 501 are can be specified as values, and you cannot specify\n                      a status code more than once.\n                  ttl:\n                    type: integer\n                    format: int64\n                    x-dcl-go-name: Ttl\n                    description: The TTL (in seconds) for which to cache responses\n                      with the corresponding status code. The maximum allowed value\n                      is 1800s (30 minutes), noting that infrequently accessed objects\n                      may be evicted from the cache before the defined TTL.\n            requestCoalescing:\n              type: boolean\n              x-dcl-go-name: RequestCoalescing\n              description: If true then Cloud CDN will combine multiple concurrent\n                cache fill requests into a small number of requests to the origin.\n            serveWhileStale:\n              type: integer\n              format: int64\n              x-dcl-go-name: ServeWhileStale\n              description: Serve existing content from the cache (if available) when\n                revalidating content with the origin, or when an error is encountered\n                when refreshing the cache. This setting defines the default \"max-stale\"\n                duration for any cached responses that do not specify a max-stale\n                directive. Stale responses that exceed the TTL configured here will\n                not be served. The default limit (max-stale) is 86400s (1 day), which\n                will allow stale content to be served up to this limit beyond the\n                max-age (or s-max-age) of a cached response. The maximum allowed value\n                is 604800 (1 week). Set this to zero (0) to disable serve-while-stale.\n            signedUrlCacheMaxAgeSec:\n              type: integer\n              format: int64\n              x-dcl-go-name: SignedUrlCacheMaxAgeSec\n              description: 'Maximum number of seconds the response to a signed URL\n                request will be considered fresh. After this time period, the response\n                will be revalidated before being served. Defaults to 1hr (3600s).\n                When serving responses to signed URL requests, Cloud CDN will internally\n                behave as though all responses from this backend had a `\"Cache-Control:\n                public, max-age=\"` header, regardless of any existing Cache-Control\n                header. The actual headers served in responses will not be altered.'\n            signedUrlKeyNames:\n              type: array\n              x-dcl-go-name: SignedUrlKeyNames\n              readOnly: true\n              description: Names of the keys for signing request URLs.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: string\n                x-dcl-go-type: string\n        circuitBreakers:\n          type: object\n          x-dcl-go-name: CircuitBreakers\n          x-dcl-go-type: BackendServiceCircuitBreakers\n          description: 'Settings controlling the volume of connections to a backend\n            service. If not set, this feature is considered disabled. This field is\n            applicable to either: - A regional backend service with the service_protocol\n            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.\n            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.\n            Not supported when the backend service is referenced by a URL map that\n            is bound to target gRPC proxy that has validateForProxyless field set\n            to true.'\n          properties:\n            maxConnections:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxConnections\n              description: The maximum number of connections to the backend service.\n                If not specified, there is no limit.\n            maxPendingRequests:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxPendingRequests\n              description: The maximum number of pending requests allowed to the backend\n                service. If not specified, there is no limit.\n            maxRequests:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxRequests\n              description: The maximum number of parallel requests that allowed to\n                the backend service. If not specified, there is no limit.\n            maxRequestsPerConnection:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxRequestsPerConnection\n              description: Maximum requests for a single connection to the backend\n                service. This parameter is respected by both the HTTP/1.1 and HTTP/2\n                implementations. If not specified, there is no limit. Setting this\n                parameter to 1 will effectively disable keep alive.\n            maxRetries:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxRetries\n              description: The maximum number of parallel retries allowed to the backend\n                cluster. If not specified, the default is 1.\n        connectionDraining:\n          type: object\n          x-dcl-go-name: ConnectionDraining\n          x-dcl-go-type: BackendServiceConnectionDraining\n          properties:\n            drainingTimeoutSec:\n              type: integer\n              format: int64\n              x-dcl-go-name: DrainingTimeoutSec\n              description: Configures a duration timeout for existing requests on\n                a removed backend instance. For supported load balancers and protocols,\n                as described in (/load-balancing/docs/enabling-connection-draining).\n        consistentHash:\n          type: object\n          x-dcl-go-name: ConsistentHash\n          x-dcl-go-type: BackendServiceConsistentHash\n          description: 'Consistent Hash-based load balancing can be used to provide\n            soft session affinity based on HTTP headers, cookies or other properties.\n            This load balancing policy is applicable only for HTTP connections. The\n            affinity to a particular destination host will be lost when one or more\n            hosts are added/removed from the destination service. This field specifies\n            parameters that control consistent hashing. This field is only applicable\n            when `localityLbPolicy` is set to `MAGLEV` or `RING_HASH`. This field\n            is applicable to either: - A regional backend service with the service_protocol\n            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.\n            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.\n            Not supported when the backend service is referenced by a URL map that\n            is bound to target gRPC proxy that has validateForProxyless field set\n            to true.'\n          properties:\n            httpCookie:\n              type: object\n              x-dcl-go-name: HttpCookie\n              x-dcl-go-type: BackendServiceConsistentHashHttpCookie\n              description: Hash is based on HTTP Cookie. This field describes a HTTP\n                cookie that will be used as the hash key for the consistent hash load\n                balancer. If the cookie is not present, it will be generated. This\n                field is applicable if the `sessionAffinity` is set to `HTTP_COOKIE`.\n              properties:\n                name:\n                  type: string\n                  x-dcl-go-name: Name\n                  description: Name of the cookie.\n                path:\n                  type: string\n                  x-dcl-go-name: Path\n                  description: Path to set for the cookie.\n                ttl:\n                  type: object\n                  x-dcl-go-name: Ttl\n                  x-dcl-go-type: BackendServiceConsistentHashHttpCookieTtl\n                  description: Lifetime of the cookie.\n                  properties:\n                    nanos:\n                      type: integer\n                      format: int64\n                      x-dcl-go-name: Nanos\n                      description: Span of time that's a fraction of a second at nanosecond\n                        resolution. Durations less than one second are represented\n                        with a 0 `seconds` field and a positive `nanos` field. Must\n                        be from 0 to 999,999,999 inclusive.\n                    seconds:\n                      type: integer\n                      format: int64\n                      x-dcl-go-name: Seconds\n                      description: 'Span of time at a resolution of a second. Must\n                        be from 0 to 315,576,000,000 inclusive. Note: these bounds\n                        are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25\n                        days/year * 10000 years'\n            httpHeaderName:\n              type: string\n              x-dcl-go-name: HttpHeaderName\n              description: The hash based on the value of the specified header field.\n                This field is applicable if the `sessionAffinity` is set to `HEADER_FIELD`.\n            minimumRingSize:\n              type: integer\n              format: int64\n              x-dcl-go-name: MinimumRingSize\n              description: The minimum number of virtual nodes to use for the hash\n                ring. Defaults to 1024. Larger ring sizes result in more granular\n                load distributions. If the number of hosts in the load balancing pool\n                is larger than the ring size, each host will be assigned a single\n                virtual node.\n        customRequestHeaders:\n          type: array\n          x-dcl-go-name: CustomRequestHeaders\n          description: Headers that the HTTP/S load balancer should add to proxied\n            requests.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n        customResponseHeaders:\n          type: array\n          x-dcl-go-name: CustomResponseHeaders\n          description: Headers that the HTTP/S load balancer should add to proxied\n            responses.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n        description:\n          type: string\n          x-dcl-go-name: Description\n          description: An optional description of this resource. Provide this property\n            when you create the resource.\n        enableCdn:\n          type: boolean\n          x-dcl-go-name: EnableCdn\n          description: If `true`, enables Cloud CDN for the backend service. Only\n            applicable if the `loadBalancingScheme` is `EXTERNAL` and the `protocol`\n            is `HTTP` or `HTTPS`.\n        failoverPolicy:\n          type: object\n          x-dcl-go-name: FailoverPolicy\n          x-dcl-go-type: BackendServiceFailoverPolicy\n          description: Applicable only to Failover for Internal TCP/UDP Load Balancing\n            and Network Load Balancing. Requires at least one backend instance group\n            to be defined as a backup (failover) backend.\n          properties:\n            disableConnectionDrainOnFailover:\n              type: boolean\n              x-dcl-go-name: DisableConnectionDrainOnFailover\n              description: This can be set to `true` only if the `protocol` is `TCP`.\n                The default is `false`.\n            dropTrafficIfUnhealthy:\n              type: boolean\n              x-dcl-go-name: DropTrafficIfUnhealthy\n              description: Applicable only to Failover for Internal TCP/UDP Load Balancing\n                and Network Load Balancing, If set to `true`, connections to the load\n                balancer are dropped when all primary and all backup backend VMs are\n                unhealthy.If set to `false`, connections are distributed among all\n                primary VMs when all primary and all backup backend VMs are unhealthy.\n                The default is `false`.\n            failoverRatio:\n              type: number\n              format: double\n              x-dcl-go-name: FailoverRatio\n              description: Applicable only to Failover for Internal TCP/UDP Load Balancing\n                and Network Load Balancing. The value of the field must be in the\n                range ``. If the value is 0, the load balancer performs a failover\n                when the number of healthy primary VMs equals zero. For all other\n                values, the load balancer performs a failover when the total number\n                of healthy primary VMs is less than this ratio.\n        fingerprint:\n          type: string\n          x-dcl-go-name: Fingerprint\n          readOnly: true\n          description: Fingerprint of this resource. A hash of the contents stored\n            in this object. This field is used in optimistic locking. This field will\n            be ignored when inserting a BackendService. An up-to-date fingerprint\n            must be provided in order to update the `BackendService`, otherwise the\n            request will fail with error `412 conditionNotMet`. To see the latest\n            fingerprint, make a `get()` request to retrieve a BackendService.\n          x-kubernetes-immutable: true\n        healthChecks:\n          type: array\n          x-dcl-go-name: HealthChecks\n          description: The list of URLs to the healthChecks, httpHealthChecks (legacy),\n            or httpsHealthChecks (legacy) resource for health checking this backend\n            service. Not all backend services support legacy health checks. See (/load-balancing/docs/health-check-concepts#lb_guide).\n            Currently, at most one health check can be specified for each backend\n            service. Backend services with instance group or zonal NEG backends must\n            have a health check. Backend services with internet or serverless NEG\n            backends must not have a health check.\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: string\n            x-dcl-go-type: string\n            x-dcl-references:\n            - resource: Compute/HealthCheck\n              field: selfLink\n            - resource: Compute/HttpHealthCheck\n              field: selfLink\n            - resource: Compute/HttpsHealthCheck\n              field: selfLink\n        iap:\n          type: object\n          x-dcl-go-name: Iap\n          x-dcl-go-type: BackendServiceIap\n          description: The configurations for Identity-Aware Proxy on this resource.\n            Not available for Internal TCP/UDP Load Balancing and Network Load Balancing.\n          x-dcl-conflicts:\n          - cdnPolicy\n          properties:\n            enabled:\n              type: boolean\n              x-dcl-go-name: Enabled\n              description: Whether the serving infrastructure will authenticate and\n                authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret\n                fields must be non-empty.\n            oauth2ClientId:\n              type: string\n              x-dcl-go-name: OAuth2ClientId\n              description: OAuth2 client ID to use for the authentication flow.\n            oauth2ClientSecret:\n              type: string\n              x-dcl-go-name: OAuth2ClientSecret\n              description: OAuth2 client secret to use for the authentication flow.\n                For security reasons, this value cannot be retrieved via the API.\n                Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256\n                field. @InputOnly\n              x-dcl-sensitive: true\n              x-dcl-mutable-unreadable: true\n            oauth2ClientSecretSha256:\n              type: string\n              x-dcl-go-name: OAuth2ClientSecretSha256\n              readOnly: true\n              description: SHA256 hash value for the field oauth2_client_secret above.\n        id:\n          type: integer\n          format: int64\n          x-dcl-go-name: Id\n          readOnly: true\n          description: The unique identifier for the resource. This identifier is\n            defined by the server.\n          x-kubernetes-immutable: true\n        loadBalancingScheme:\n          type: string\n          x-dcl-go-name: LoadBalancingScheme\n          x-dcl-go-type: BackendServiceLoadBalancingSchemeEnum\n          description: 'Specifies the load balancer type. Choose `EXTERNAL` for external\n            HTTP(S), SSL Proxy, TCP Proxy and Network Load Balancing. Choose ` INTERNAL`\n            for Internal TCP/UDP Load Balancing. Choose ` INTERNAL_MANAGED` for Internal\n            HTTP(S) Load Balancing. ` INTERNAL_SELF_MANAGED` for Traffic Director.\n            A backend service created for one type of load balancer cannot be used\n            with another. For more information, refer to (/load-balancing/docs/choosing-load-balancer/).\n            Possible values: INVALID_LOAD_BALANCING_SCHEME, INTERNAL, INTERNAL_MANAGED,\n            INTERNAL_SELF_MANAGED, EXTERNAL, EXTERNAL_MANAGED'\n          enum:\n          - INVALID_LOAD_BALANCING_SCHEME\n          - INTERNAL\n          - INTERNAL_MANAGED\n          - INTERNAL_SELF_MANAGED\n          - EXTERNAL\n          - EXTERNAL_MANAGED\n        localityLbPolicy:\n          type: string\n          x-dcl-go-name: LocalityLbPolicy\n          x-dcl-go-type: BackendServiceLocalityLbPolicyEnum\n          description: 'The load balancing algorithm used within the scope of the\n            locality. The possible values are: - `ROUND_ROBIN`: This is a simple policy\n            in which each healthy backend is selected in round robin order. This is\n            the default. - `LEAST_REQUEST`: An `O(1)` algorithm which selects two\n            random healthy hosts and picks the host which has fewer active requests.\n            - `RING_HASH`: The ring/modulo hash load balancer implements consistent\n            hashing to backends. The algorithm has the property that the addition/removal\n            of a host from a set of N hosts only affects 1/N of the requests. - `RANDOM`:\n            The load balancer selects a random healthy host. - `ORIGINAL_DESTINATION`:\n            Backend host is selected based on the client connection metadata, i.e.,\n            connections are opened to the same address as the destination address\n            of the incoming connection before the connection was redirected to the\n            load balancer. - `MAGLEV`: used as a drop in replacement for the ring\n            hash load balancer. Maglev is not as stable as ring hash but has faster\n            table lookup build times and host selection times. For more information\n            about Maglev, see (https://ai.google/research/pubs/pub44824) This field\n            is applicable to either: - A regional backend service with the service_protocol\n            set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED.\n            - A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.\n            If `sessionAffinity` is not NONE, and this field is not set to `MAGLEV`\n            or `RING_HASH`, session affinity settings will not take effect. Only the\n            default `ROUND_ROBIN` policy is supported when the backend service is\n            referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless\n            field set to true. Possible values: INVALID_LB_POLICY, ROUND_ROBIN, LEAST_REQUEST,\n            RING_HASH, RANDOM, ORIGINAL_DESTINATION, MAGLEV'\n          enum:\n          - INVALID_LB_POLICY\n          - ROUND_ROBIN\n          - LEAST_REQUEST\n          - RING_HASH\n          - RANDOM\n          - ORIGINAL_DESTINATION\n          - MAGLEV\n        location:\n          type: string\n          x-dcl-go-name: Location\n          description: URL of the region where the regional backend service resides.\n            This field is not applicable to global backend services. You must specify\n            this field as part of the HTTP request URL. It is not settable as a field\n            in the request body.\n          x-kubernetes-immutable: true\n        logConfig:\n          type: object\n          x-dcl-go-name: LogConfig\n          x-dcl-go-type: BackendServiceLogConfig\n          description: This field denotes the logging options for the load balancer\n            traffic served by this backend service. If logging is enabled, logs will\n            be exported to Stackdriver.\n          properties:\n            enable:\n              type: boolean\n              x-dcl-go-name: Enable\n              description: This field denotes whether to enable logging for the load\n                balancer traffic served by this backend service.\n            sampleRate:\n              type: number\n              format: double\n              x-dcl-go-name: SampleRate\n              description: This field can only be specified if logging is enabled\n                for this backend service. The value of the field must be in [0, 1].\n                This configures the sampling rate of requests to the load balancer\n                where 1.0 means all logged requests are reported and 0.0 means no\n                logged requests are reported. The default value is 1.0.\n        maxStreamDuration:\n          type: object\n          x-dcl-go-name: MaxStreamDuration\n          x-dcl-go-type: BackendServiceMaxStreamDuration\n          description: Specifies the default maximum duration (timeout) for streams\n            to this service. Duration is computed from the beginning of the stream\n            until the response has been completely processed, including all retries.\n            A stream that does not complete in this duration is closed. If not specified,\n            there will be no timeout limit, i.e. the maximum duration is infinite.\n            This field is only allowed when the `loadBalancingScheme` of the backend\n            service is `INTERNAL_SELF_MANAGED`.\n          properties:\n            nanos:\n              type: integer\n              format: int64\n              x-dcl-go-name: Nanos\n              description: Span of time that's a fraction of a second at nanosecond\n                resolution. Durations less than one second are represented with a\n                0 `seconds` field and a positive `nanos` field. Must be from 0 to\n                999,999,999 inclusive.\n            seconds:\n              type: integer\n              format: int64\n              x-dcl-go-name: Seconds\n              description: 'Span of time at a resolution of a second. Must be from\n                0 to 315,576,000,000 inclusive. Note: these bounds are computed from:\n                60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years'\n        name:\n          type: string\n          x-dcl-go-name: Name\n          description: Name of the resource. Provided by the client when the resource\n            is created. The name must be 1-63 characters long, and comply with (https://www.ietf.org/rfc/rfc1035.txt).\n            Specifically, the name must be 1-63 characters long and match the regular\n            expression `)?` which means the first character must be a lowercase letter,\n            and all following characters must be a dash, lowercase letter, or digit,\n            except the last character, which cannot be a dash.\n          x-kubernetes-immutable: true\n        network:\n          type: string\n          x-dcl-go-name: Network\n          description: The URL of the network to which this backend service belongs.\n            This field can only be specified when the load balancing scheme is set\n            to `INTERNAL`.\n          x-dcl-references:\n          - resource: Compute/Network\n            field: selfLink\n        outlierDetection:\n          type: object\n          x-dcl-go-name: OutlierDetection\n          x-dcl-go-type: BackendServiceOutlierDetection\n          description: 'Settings controlling the eviction of unhealthy hosts from\n            the load balancing pool for the backend service. If not set, this feature\n            is considered disabled. This field is applicable to either: - A regional\n            backend service with the service_protocol set to HTTP, HTTPS, or HTTP2,\n            and load_balancing_scheme set to INTERNAL_MANAGED. - A global backend\n            service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED. Not\n            supported when the backend service is referenced by a URL map that is\n            bound to target gRPC proxy that has validateForProxyless field set to\n            true.'\n          properties:\n            baseEjectionTime:\n              type: object\n              x-dcl-go-name: BaseEjectionTime\n              x-dcl-go-type: BackendServiceOutlierDetectionBaseEjectionTime\n              description: The base time that a host is ejected for. The real ejection\n                time is equal to the base ejection time multiplied by the number of\n                times the host has been ejected. Defaults to 30000ms or 30s.\n              properties:\n                nanos:\n                  type: integer\n                  format: int64\n                  x-dcl-go-name: Nanos\n                  description: Span of time that's a fraction of a second at nanosecond\n                    resolution. Durations less than one second are represented with\n                    a 0 `seconds` field and a positive `nanos` field. Must be from\n                    0 to 999,999,999 inclusive.\n                seconds:\n                  type: integer\n                  format: int64\n                  x-dcl-go-name: Seconds\n                  description: 'Span of time at a resolution of a second. Must be\n                    from 0 to 315,576,000,000 inclusive. Note: these bounds are computed\n                    from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year *\n                    10000 years'\n            consecutiveErrors:\n              type: integer\n              format: int64\n              x-dcl-go-name: ConsecutiveErrors\n              description: Number of errors before a host is ejected from the connection\n                pool. When the backend host is accessed over HTTP, a 5xx return code\n                qualifies as an error. Defaults to 5.\n            consecutiveGatewayFailure:\n              type: integer\n              format: int64\n              x-dcl-go-name: ConsecutiveGatewayFailure\n              description: The number of consecutive gateway failures (502, 503, 504\n                status or connection errors that are mapped to one of those status\n                codes) before a consecutive gateway failure ejection occurs. Defaults\n                to 3.\n            enforcingConsecutiveErrors:\n              type: integer\n              format: int64\n              x-dcl-go-name: EnforcingConsecutiveErrors\n              description: The percentage chance that a host will be actually ejected\n                when an outlier status is detected through consecutive 5xx. This setting\n                can be used to disable ejection or to ramp it up slowly. Defaults\n                to 0.\n            enforcingConsecutiveGatewayFailure:\n              type: integer\n              format: int64\n              x-dcl-go-name: EnforcingConsecutiveGatewayFailure\n              description: The percentage chance that a host will be actually ejected\n                when an outlier status is detected through consecutive gateway failures.\n                This setting can be used to disable ejection or to ramp it up slowly.\n                Defaults to 100.\n            enforcingSuccessRate:\n              type: integer\n              format: int64\n              x-dcl-go-name: EnforcingSuccessRate\n              description: The percentage chance that a host will be actually ejected\n                when an outlier status is detected through success rate statistics.\n                This setting can be used to disable ejection or to ramp it up slowly.\n                Defaults to 100.\n            interval:\n              type: object\n              x-dcl-go-name: Interval\n              x-dcl-go-type: BackendServiceOutlierDetectionInterval\n              description: Time interval between ejection analysis sweeps. This can\n                result in both new ejections as well as hosts being returned to service.\n                Defaults to 1 second.\n              properties:\n                nanos:\n                  type: integer\n                  format: int64\n                  x-dcl-go-name: Nanos\n                  description: Span of time that's a fraction of a second at nanosecond\n                    resolution. Durations less than one second are represented with\n                    a 0 `seconds` field and a positive `nanos` field. Must be from\n                    0 to 999,999,999 inclusive.\n                seconds:\n                  type: integer\n                  format: int64\n                  x-dcl-go-name: Seconds\n                  description: 'Span of time at a resolution of a second. Must be\n                    from 0 to 315,576,000,000 inclusive. Note: these bounds are computed\n                    from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year *\n                    10000 years'\n            maxEjectionPercent:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxEjectionPercent\n              description: Maximum percentage of hosts in the load balancing pool\n                for the backend service that can be ejected. Defaults to 50%.\n            successRateMinimumHosts:\n              type: integer\n              format: int64\n              x-dcl-go-name: SuccessRateMinimumHosts\n              description: The number of hosts in a cluster that must have enough\n                request volume to detect success rate outliers. If the number of hosts\n                is less than this setting, outlier detection via success rate statistics\n                is not performed for any host in the cluster. Defaults to 5.\n            successRateRequestVolume:\n              type: integer\n              format: int64\n              x-dcl-go-name: SuccessRateRequestVolume\n              description: The minimum number of total requests that must be collected\n                in one interval (as defined by the interval duration above) to include\n                this host in success rate based outlier detection. If the volume is\n                lower than this setting, outlier detection via success rate statistics\n                is not performed for that host. Defaults to 100.\n            successRateStdevFactor:\n              type: integer\n              format: int64\n              x-dcl-go-name: SuccessRateStdevFactor\n              description: 'This factor is used to determine the ejection threshold\n                for success rate outlier ejection. The ejection threshold is the difference\n                between the mean success rate, and the product of this factor and\n                the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor).\n                This factor is divided by a thousand to get a double. That is, if\n                the desired factor is 1.9, the runtime value should be 1900. Defaults\n                to 1900.'\n        port:\n          type: integer\n          format: int64\n          x-dcl-go-name: Port\n          description: Deprecated in favor of `portName`. The TCP port to connect\n            on the backend. The default value is `80`. Backend services for Internal\n            TCP/UDP Load Balancing and Network Load Balancing require you omit `port`.\n        portName:\n          type: string\n          x-dcl-go-name: PortName\n          description: A named port on a backend instance group representing the port\n            for communication to the backend VMs in that group. Required when the\n            `loadBalancingScheme` is `EXTERNAL` (except Network Load Balancing), `INTERNAL_MANAGED`,\n            or ` INTERNAL_SELF_MANAGED` and the backends are instance groups. The\n            named port must be defined on each backend instance group. This parameter\n            has no meaning if the backends are NEGs. Backend services for Internal\n            TCP/UDP Load Balancing and Network Load Balancing require you omit `port_name`.\n        project:\n          type: string\n          x-dcl-go-name: Project\n          description: The project for the resource\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Cloudresourcemanager/Project\n            field: name\n            parent: true\n        protocol:\n          type: string\n          x-dcl-go-name: Protocol\n          x-dcl-go-type: BackendServiceProtocolEnum\n          description: The protocol this BackendService uses to communicate with backends.\n            Possible values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending\n            on the chosen load balancer or Traffic Director configuration. Refer to\n            the documentation for the load balancer or for Traffic Director for more\n            information. Must be set to GRPC when the backend service is referenced\n            by a URL map that is bound to target gRPC proxy.\n          enum:\n          - HTTP\n          - HTTPS\n          - HTTP2\n          - TCP\n          - SSL\n          - UDP\n          - GRPC\n          - ALL\n          - UNSPECIFIED\n        securityPolicy:\n          type: string\n          x-dcl-go-name: SecurityPolicy\n          description: The resource URL for the security policy associated with this\n            backend service.\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Compute/SecurityPolicy\n            field: selfLink\n        securitySettings:\n          type: object\n          x-dcl-go-name: SecuritySettings\n          x-dcl-go-type: BackendServiceSecuritySettings\n          description: 'This field specifies the security policy that applies to this\n            backend service. This field is applicable to either: - A regional backend\n            service with the service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme\n            set to INTERNAL_MANAGED. - A global backend service with the load_balancing_scheme\n            set to INTERNAL_SELF_MANAGED.'\n          x-kubernetes-immutable: true\n          properties:\n            clientTlsPolicy:\n              type: string\n              x-dcl-go-name: ClientTlsPolicy\n              description: 'Optional. A URL referring to a networksecurity.ClientTlsPolicy\n                resource that describes how clients should authenticate with this\n                service''s backends. `clientTlsPolicy` only applies to a global `BackendService`\n                with the `loadBalancingScheme` set to `INTERNAL_SELF_MANAGED`. If\n                left blank, communications are not encrypted. Note: This field currently\n                has no impact.'\n              x-dcl-references:\n              - resource: Networksecurity/ClientTlsPolicy\n                field: name\n            subjectAltNames:\n              type: array\n              x-dcl-go-name: SubjectAltNames\n              description: 'Optional. A list of Subject Alternative Names (SANs) that\n                the client verifies during a mutual TLS handshake with an server/endpoint\n                for this `BackendService`. When the server presents its X.509 certificate\n                to the client, the client inspects the certificate''s `subjectAltName`\n                field. If the field contains one of the specified values, the communication\n                continues. Otherwise, it fails. This additional check enables the\n                client to verify that the server is authorized to run the requested\n                service. Note that the contents of the server certificate''s `subjectAltName`\n                field are configured by the Public Key Infrastructure which provisions\n                server identities. Only applies to a global `BackendService` with\n                `loadBalancingScheme` set to `INTERNAL_SELF_MANAGED`. Only applies\n                when `BackendService` has an attached `clientTlsPolicy` with `clientCertificate`\n                (mTLS mode). Note: This field currently has no impact.'\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: string\n                x-dcl-go-type: string\n        selfLink:\n          type: string\n          x-dcl-go-name: SelfLink\n          readOnly: true\n          description: Server-defined URL for the resource.\n          x-kubernetes-immutable: true\n        selfLinkWithId:\n          type: string\n          x-dcl-go-name: SelfLinkWithId\n          readOnly: true\n          description: Server-defined URL for this resource with the resource id.\n          x-kubernetes-immutable: true\n        sessionAffinity:\n          type: string\n          x-dcl-go-name: SessionAffinity\n          x-dcl-go-type: BackendServiceSessionAffinityEnum\n          description: 'Type of session affinity to use. The default is `NONE`. When\n            the `loadBalancingScheme` is `EXTERNAL`: * For Network Load Balancing,\n            the possible values are `NONE`, `CLIENT_IP`, `CLIENT_IP_PROTO`, or ` CLIENT_IP_PORT_PROTO`.\n            * For all other load balancers that use `loadBalancingScheme=EXTERNAL`,\n            the possible values are `NONE`, `CLIENT_IP`, or `GENERATED_COOKIE`. *\n            You can use `GENERATED_COOKIE` if the `protocol` is `HTTP`, `HTTP2`, or\n            `HTTPS`. When the `loadBalancingScheme` is `INTERNAL`, possible values\n            are `NONE`, `CLIENT_IP`, `CLIENT_IP_PROTO`, or `CLIENT_IP_PORT_PROTO`.\n            When the `loadBalancingScheme` is `INTERNAL_SELF_MANAGED`, or `INTERNAL_MANAGED`,\n            possible values are `NONE`, `CLIENT_IP`, `GENERATED_COOKIE`, `HEADER_FIELD`,\n            or `HTTP_COOKIE`. Not supported when the backend service is referenced\n            by a URL map that is bound to target gRPC proxy that has validateForProxyless\n            field set to true.'\n          enum:\n          - NONE\n          - CLIENT_IP\n          - CLIENT_IP_PROTO\n          - GENERATED_COOKIE\n          - CLIENT_IP_PORT_PROTO\n          - HTTP_COOKIE\n          - HEADER_FIELD\n          - CLIENT_IP_NO_DESTINATION\n        timeoutSec:\n          type: integer\n          format: int64\n          x-dcl-go-name: TimeoutSec\n          description: The backend service timeout has a different meaning depending\n            on the type of load balancer. For more information see, (/load-balancing/docs/backend-service#timeout-setting)\n            The default is 30 seconds. The full range of timeout values allowed is\n            1 - 2,147,483,647 seconds.\n")

// 59382 bytes
// MD5: 71c85f99906b325eed9fbf49299946d5
