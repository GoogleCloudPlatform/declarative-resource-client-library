// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// GENERATED BY gen_go_data.go
// gen_go_data -package beta -var YAML_autoscaler blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/compute/beta/autoscaler.yaml

package beta

// blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/compute/beta/autoscaler.yaml
var YAML_autoscaler = []byte("info:\n  title: Compute/Autoscaler\n  description: DCL Specification for the Compute Autoscaler resource\n  x-dcl-has-iam: false\npaths:\n  get:\n    description: The function used to get information about a Autoscaler\n    parameters:\n    - name: Autoscaler\n      required: true\n      description: A full instance of a Autoscaler\n  apply:\n    description: The function used to apply information about a Autoscaler\n    parameters:\n    - name: Autoscaler\n      required: true\n      description: A full instance of a Autoscaler\n  delete:\n    description: The function used to delete a Autoscaler\n    parameters:\n    - name: Autoscaler\n      required: true\n      description: A full instance of a Autoscaler\n  deleteAll:\n    description: The function used to delete all Autoscaler\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n    - name: location\n      required: true\n      schema:\n        type: string\n  list:\n    description: The function used to list information about many Autoscaler\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n    - name: location\n      required: true\n      schema:\n        type: string\ncomponents:\n  schemas:\n    Autoscaler:\n      title: Autoscaler\n      x-dcl-locations:\n      - zone\n      - region\n      x-dcl-parent-container: project\n      type: object\n      required:\n      - name\n      - target\n      - autoscalingPolicy\n      - project\n      properties:\n        autoscalingPolicy:\n          type: object\n          x-dcl-go-name: AutoscalingPolicy\n          x-dcl-go-type: AutoscalerAutoscalingPolicy\n          description: 'The configuration parameters for the autoscaling algorithm.\n            You can define one or more of the policies for an autoscaler: `cpuUtilization`,\n            `customMetricUtilizations`, and `loadBalancingUtilization`. If none of\n            these are specified, the default will be to autoscale based on `cpuUtilization`\n            to `0.6` or 60%.'\n          required:\n          - minNumReplicas\n          - maxNumReplicas\n          properties:\n            coolDownPeriodSec:\n              type: integer\n              format: int64\n              x-dcl-go-name: CoolDownPeriodSec\n              description: The number of seconds that the autoscaler should wait before\n                it starts collecting information from a new instance. This prevents\n                the autoscaler from collecting information when the instance is initializing,\n                during which the collected usage would not be reliable. The default\n                time autoscaler waits is 60 seconds. Virtual machine initialization\n                times might vary because of numerous factors. We recommend that you\n                test how long an instance may take to initialize. To do this, create\n                an instance and time the startup process.\n              default: 60\n            cpuUtilization:\n              type: object\n              x-dcl-go-name: CpuUtilization\n              x-dcl-go-type: AutoscalerAutoscalingPolicyCpuUtilization\n              description: Defines the CPU utilization policy that allows the autoscaler\n                to scale based on the average CPU utilization of a managed instance\n                group.\n              x-dcl-server-default: true\n              required:\n              - utilizationTarget\n              properties:\n                utilizationTarget:\n                  type: number\n                  format: double\n                  x-dcl-go-name: UtilizationTarget\n                  description: The target CPU utilization that the autoscaler should\n                    maintain. Must be a float value in the range (0, 1]. If not specified,\n                    the default is `0.6`. If the CPU level is below the target utilization,\n                    the autoscaler scales down the number of instances until it reaches\n                    the minimum number of instances you specified or until the average\n                    CPU of your instances reaches the target utilization. If the average\n                    CPU is above the target utilization, the autoscaler scales up\n                    until it reaches the maximum number of instances you specified\n                    or until the average utilization reaches the target utilization.\n            customMetricUtilizations:\n              type: array\n              x-dcl-go-name: CustomMetricUtilizations\n              description: Configuration parameters of autoscaling based on a custom\n                metric.\n              x-dcl-send-empty: true\n              x-dcl-list-type: list\n              items:\n                type: object\n                x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizations\n                required:\n                - metric\n                properties:\n                  filter:\n                    type: string\n                    x-dcl-go-name: Filter\n                    description: A filter string, compatible with a Stackdriver Monitoring\n                      filter string for TimeSeries.list API call. This filter is used\n                      to select a specific TimeSeries for the purpose of autoscaling\n                      and to determine whether the metric is exporting per-instance\n                      or per-group data.\n                  metric:\n                    type: string\n                    x-dcl-go-name: Metric\n                    description: The identifier (type) of the Stackdriver Monitoring\n                      metric. The metric cannot have negative values. The metric must\n                      have a value type of `INT64` or `DOUBLE`.\n                  singleInstanceAssignment:\n                    type: number\n                    format: double\n                    x-dcl-go-name: SingleInstanceAssignment\n                    description: If scaling is based on a per-group metric value that\n                      represents the total amount of work to be done or resource usage,\n                      set this value to an amount assigned for a single instance of\n                      the scaled group.\n                  utilizationTarget:\n                    type: number\n                    format: double\n                    x-dcl-go-name: UtilizationTarget\n                    description: The target value of the metric that autoscaler should\n                      maintain. This must be a positive value. A utilization metric\n                      scales number of virtual machines handling requests to increase\n                      or decrease proportionally to the metric. For example, a good\n                      metric to use as a utilization_target is `https://www.googleapis.com/compute/v1/instance/network/received_bytes_count`.\n                      The autoscaler will work to keep this value constant for each\n                      of the instances.\n                  utilizationTargetType:\n                    type: string\n                    x-dcl-go-name: UtilizationTargetType\n                    x-dcl-go-type: AutoscalerAutoscalingPolicyCustomMetricUtilizationsUtilizationTargetTypeEnum\n                    description: Defines how target utilization value is expressed\n                      for a Stackdriver Monitoring metric. Either `GAUGE`, `DELTA_PER_SECOND`,\n                      or `DELTA_PER_MINUTE`.\n                    enum:\n                    - GAUGE\n                    - DELTA_PER_SECOND\n                    - DELTA_PER_MINUTE\n            loadBalancingUtilization:\n              type: object\n              x-dcl-go-name: LoadBalancingUtilization\n              x-dcl-go-type: AutoscalerAutoscalingPolicyLoadBalancingUtilization\n              description: Configuration parameters of autoscaling based on load balancer.\n              required:\n              - utilizationTarget\n              properties:\n                utilizationTarget:\n                  type: number\n                  format: double\n                  x-dcl-go-name: UtilizationTarget\n                  description: Fraction of backend capacity utilization (set in HTTP(S)\n                    load balancing configuration) that autoscaler should maintain.\n                    Must be a positive float value. If not defined, the default is\n                    `0.8`.\n            maxNumReplicas:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxNumReplicas\n              description: The maximum number of instances that the autoscaler can\n                scale up to. This is required when creating or updating an autoscaler.\n                The maximum number of replicas should not be lower than minimal number\n                of replicas.\n            minNumReplicas:\n              type: integer\n              format: int64\n              x-dcl-go-name: MinNumReplicas\n              description: The minimum number of replicas that the autoscaler can\n                scale down to. This cannot be less than 0. If not provided, autoscaler\n                will choose a default value depending on maximum number of instances\n                allowed.\n              x-dcl-send-empty: true\n            mode:\n              type: string\n              x-dcl-go-name: Mode\n              x-dcl-go-type: AutoscalerAutoscalingPolicyModeEnum\n              description: 'Defines operating mode for this policy. Possible values:\n                OFF, ON, ONLY_SCALE_OUT, ONLY_UP'\n              default: \"ON\"\n              enum:\n              - \"OFF\"\n              - \"ON\"\n              - ONLY_SCALE_OUT\n              - ONLY_UP\n            scaleInControl:\n              type: object\n              x-dcl-go-name: ScaleInControl\n              x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControl\n              x-dcl-server-default: true\n              properties:\n                maxScaledInReplicas:\n                  type: object\n                  x-dcl-go-name: MaxScaledInReplicas\n                  x-dcl-go-type: AutoscalerAutoscalingPolicyScaleInControlMaxScaledInReplicas\n                  description: Maximum allowed number (or %) of VMs that can be deducted\n                    from the peak recommendation during the window autoscaler looks\n                    at when computing recommendations. Possibly all these VMs can\n                    be deleted at once so user service needs to be prepared to lose\n                    that many VMs in one step.\n                  properties:\n                    calculated:\n                      type: integer\n                      format: int64\n                      x-dcl-go-name: Calculated\n                      readOnly: true\n                      description: |-\n                        Absolute value of VM instances calculated based on the specific mode.\n\n                        - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value.\n                        - If the value is a `percent`, then the `calculated` value is `percent`/100 * `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded up.\n                    fixed:\n                      type: integer\n                      format: int64\n                      x-dcl-go-name: Fixed\n                      description: Specifies a fixed number of VM instances. This\n                        must be a positive integer.\n                    percent:\n                      type: integer\n                      format: int64\n                      x-dcl-go-name: Percent\n                      description: Specifies a percentage of instances between 0 to\n                        100%, inclusive. For example, specify `80` for 80%.\n                timeWindowSec:\n                  type: integer\n                  format: int64\n                  x-dcl-go-name: TimeWindowSec\n                  description: How long back autoscaling should look when computing\n                    recommendations to include directives regarding slower scale in,\n                    as described above.\n        creationTimestamp:\n          type: string\n          x-dcl-go-name: CreationTimestamp\n          readOnly: true\n          description: Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\n            text format.\n          x-kubernetes-immutable: true\n        description:\n          type: string\n          x-dcl-go-name: Description\n          description: An optional description of this resource. Provide this property\n            when you create the resource.\n        id:\n          type: integer\n          format: int64\n          x-dcl-go-name: Id\n          readOnly: true\n          description: The unique identifier for the resource. This identifier is\n            defined by the server. (-- For time of migration from Autoscaler backend\n            this field will accept values which will be stored as legacy autoscaler\n            id. --)\n          x-kubernetes-immutable: true\n        location:\n          type: string\n          x-dcl-go-name: Location\n          description: The location of this resource.\n          x-kubernetes-immutable: true\n        name:\n          type: string\n          x-dcl-go-name: Name\n          description: Name of the resource. Provided by the client when the resource\n            is created. The name must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).\n            Specifically, the name must be 1-63 characters long and match the regular\n            expression `)?` which means the first character must be a lowercase letter,\n            and all following characters must be a dash, lowercase letter, or digit,\n            except the last character, which cannot be a dash.\n          x-kubernetes-immutable: true\n        project:\n          type: string\n          x-dcl-go-name: Project\n          description: The project for the resource\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Cloudresourcemanager/Project\n            field: name\n        recommendedSize:\n          type: integer\n          format: int64\n          x-dcl-go-name: RecommendedSize\n          readOnly: true\n          description: Target recommended MIG size (number of instances) computed\n            by autoscaler. Autoscaler calculates recommended MIG size even when autoscaling\n            policy mode is different from ON. This field is empty when autoscaler\n            is not connected to the existing managed instance group or autoscaler\n            did not generate its prediction.\n          x-kubernetes-immutable: true\n        region:\n          type: string\n          x-dcl-go-name: Region\n          description: URL of the [region](/compute/docs/regions-zones/#available)\n            where the instance group resides (for autoscalers living in regional scope).\n          x-kubernetes-immutable: true\n        scalingScheduleStatus:\n          type: object\n          additionalProperties:\n            type: string\n          x-dcl-go-name: ScalingScheduleStatus\n          description: Status information of existing scaling schedules.\n          x-kubernetes-immutable: true\n        selfLink:\n          type: string\n          x-dcl-go-name: SelfLink\n          readOnly: true\n          description: Server-defined URL for the resource.\n          x-kubernetes-immutable: true\n        selfLinkWithId:\n          type: string\n          x-dcl-go-name: SelfLinkWithId\n          description: Server-defined URL for this resource with the resource id.\n          x-kubernetes-immutable: true\n        status:\n          type: string\n          x-dcl-go-name: Status\n          x-dcl-go-type: AutoscalerStatusEnum\n          readOnly: true\n          description: |-\n            The status of the autoscaler configuration. Current set of possible values:\n\n            - `PENDING`: Autoscaler backend hasn't read new/updated configuration.\n            - `DELETING`: Configuration is being deleted.\n            - `ACTIVE`: Configuration is acknowledged to be effective. Some warnings might be present in the `statusDetails` field.\n            - `ERROR`: Configuration has errors. Actionable for users. Details are present in the `statusDetails` field.\n\n             New values might be added in the future.\n          x-kubernetes-immutable: true\n          enum:\n          - PENDING\n          - RUNNING\n          - DONE\n        statusDetails:\n          type: array\n          x-dcl-go-name: StatusDetails\n          readOnly: true\n          description: Human-readable details about the current state of the autoscaler.\n            Read the documentation for [Commonly returned status messages](/compute/docs/autoscaler/understanding-autoscaler-decisions#commonly_returned_status_messages)\n            for examples of status messages you might encounter.\n          x-kubernetes-immutable: true\n          x-dcl-send-empty: true\n          x-dcl-list-type: list\n          items:\n            type: object\n            x-dcl-go-type: AutoscalerStatusDetails\n            properties:\n              message:\n                type: string\n                x-dcl-go-name: Message\n                description: The status message.\n                x-kubernetes-immutable: true\n              type:\n                type: string\n                x-dcl-go-name: Type\n                x-dcl-go-type: AutoscalerStatusDetailsTypeEnum\n                description: |-\n                  The type of error, warning, or notice returned. Current set of possible values:\n\n                  - `ALL_INSTANCES_UNHEALTHY` (WARNING): All instances in the instance group are unhealthy (not in RUNNING state).\n                  - `BACKEND_SERVICE_DOES_NOT_EXIST` (ERROR): There is no backend service attached to the instance group.\n                  - `CAPPED_AT_MAX_NUM_REPLICAS` (WARNING): Autoscaler recommends a size greater than maxNumReplicas.\n                  - `CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE` (WARNING): The custom metric samples are not exported often enough to be a credible base for autoscaling.\n                  - `CUSTOM_METRIC_INVALID` (ERROR): The custom metric that was specified does not exist or does not have the necessary labels.\n                  - `MIN_EQUALS_MAX` (WARNING): The minNumReplicas is equal to maxNumReplicas. This means the autoscaler cannot add or remove instances from the instance group.\n                  - `MISSING_CUSTOM_METRIC_DATA_POINTS` (WARNING): The autoscaler did not receive any data from the custom metric configured for autoscaling.\n                  - `MISSING_LOAD_BALANCING_DATA_POINTS` (WARNING): The autoscaler is configured to scale based on a load balancing signal but the instance group has not received any requests from the load balancer.\n                  - `MODE_OFF` (WARNING): Autoscaling is turned off. The number of instances in the group won't change automatically. The autoscaling configuration is preserved.\n                  - `MODE_ONLY_UP` (WARNING): Autoscaling is in the \"Autoscale only up\" mode. The autoscaler can add instances but not remove any.\n                  - `MORE_THAN_ONE_BACKEND_SERVICE` (ERROR): The instance group cannot be autoscaled because it has more than one backend service attached to it.\n                  - `NOT_ENOUGH_QUOTA_AVAILABLE` (ERROR): There is insufficient quota for the necessary resources, such as CPU or number of instances.\n                  - `REGION_RESOURCE_STOCKOUT` (ERROR): Shown only for regional autoscalers: there is a resource stockout in the chosen region.\n                  - `SCALING_TARGET_DOES_NOT_EXIST` (ERROR): The target to be scaled does not exist.\n                  - `UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION` (ERROR): Autoscaling does not work with an HTTP/S load balancer that has been configured for maxRate.\n                  - `ZONE_RESOURCE_STOCKOUT` (ERROR): For zonal autoscalers: there is a resource stockout in the chosen zone. For regional autoscalers: in at least one of the zones you're using there is a resource stockout.\n\n                   New values might be added in the future. Some of the values might not be available in all API versions. Possible values: PATH, OTHER, PARAMETER\n                x-kubernetes-immutable: true\n                enum:\n                - PATH\n                - OTHER\n                - PARAMETER\n        target:\n          type: string\n          x-dcl-go-name: Target\n          description: URL of the managed instance group that this autoscaler will\n            scale.\n          x-dcl-references:\n          - resource: Compute/InstanceGroupManager\n            field: instanceGroup\n        zone:\n          type: string\n          x-dcl-go-name: Zone\n          description: URL of the [zone](/compute/docs/regions-zones/#available) where\n            the instance group resides (for autoscalers living in zonal scope).\n          x-kubernetes-immutable: true\n")

// 20947 bytes
// MD5: c180c7d4aa789988d64bf4eb967868e6
