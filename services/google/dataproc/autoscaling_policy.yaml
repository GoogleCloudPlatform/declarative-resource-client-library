# Copyright 2021 Google LLC. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
components:
  schemas:
    AutoscalingPolicy:
      properties:
        basicAlgorithm:
          properties:
            cooldownPeriod:
              description: 'Optional. Duration between scaling events. A scaling period
                starts after the update operation from the previous event has completed.
                Bounds: . Default: 2m.'
              type: string
              x-dcl-go-name: CooldownPeriod
              x-kubernetes-immutable: true
            yarnConfig:
              description: Required. YARN autoscaling configuration.
              properties:
                gracefulDecommissionTimeout:
                  description: Required. Timeout for YARN graceful decommissioning
                    of Node Managers. Specifies the duration to wait for jobs to complete
                    before forcefully removing workers (and potentially interrupting
                    jobs). Only applicable to downscaling operations.
                  type: string
                  x-dcl-go-name: GracefulDecommissionTimeout
                  x-kubernetes-immutable: true
                scaleDownFactor:
                  description: Required. Fraction of average YARN pending memory in
                    the last cooldown period for which to remove workers. A scale-down
                    factor of 1 will result in scaling down so that there is no available
                    memory remaining after the update (more aggressive scaling). A
                    scale-down factor of 0 disables removing workers, which can be
                    beneficial for autoscaling a single job. See .
                  format: double
                  type: number
                  x-dcl-go-name: ScaleDownFactor
                  x-kubernetes-immutable: true
                scaleDownMinWorkerFraction:
                  description: 'Optional. Minimum scale-down threshold as a fraction
                    of total cluster size before scaling occurs. For example, in a
                    20-worker cluster, a threshold of 0.1 means the autoscaler must
                    recommend at least a 2 worker scale-down for the cluster to scale.
                    A threshold of 0 means the autoscaler will scale down on any recommended
                    change. Bounds: . Default: 0.0.'
                  format: double
                  type: number
                  x-dcl-go-name: ScaleDownMinWorkerFraction
                  x-kubernetes-immutable: true
                scaleUpFactor:
                  description: Required. Fraction of average YARN pending memory in
                    the last cooldown period for which to add workers. A scale-up
                    factor of 1.0 will result in scaling up so that there is no pending
                    memory remaining after the update (more aggressive scaling). A
                    scale-up factor closer to 0 will result in a smaller magnitude
                    of scaling up (less aggressive scaling). See .
                  format: double
                  type: number
                  x-dcl-go-name: ScaleUpFactor
                  x-kubernetes-immutable: true
                scaleUpMinWorkerFraction:
                  description: 'Optional. Minimum scale-up threshold as a fraction
                    of total cluster size before scaling occurs. For example, in a
                    20-worker cluster, a threshold of 0.1 means the autoscaler must
                    recommend at least a 2-worker scale-up for the cluster to scale.
                    A threshold of 0 means the autoscaler will scale up on any recommended
                    change. Bounds: . Default: 0.0.'
                  format: double
                  type: number
                  x-dcl-go-name: ScaleUpMinWorkerFraction
                  x-kubernetes-immutable: true
              required:
              - gracefulDecommissionTimeout
              - scaleUpFactor
              - scaleDownFactor
              type: object
              x-dcl-go-name: YarnConfig
              x-dcl-go-type: AutoscalingPolicyBasicAlgorithmYarnConfig
              x-kubernetes-immutable: true
          required:
          - yarnConfig
          type: object
          x-dcl-go-name: BasicAlgorithm
          x-dcl-go-type: AutoscalingPolicyBasicAlgorithm
        location:
          description: The location for the resource
          type: string
          x-dcl-go-name: Location
          x-kubernetes-immutable: true
        name:
          description: 'The "resource name" of the autoscaling policy, as described
            in https://cloud.google.com/apis/design/resource\_names. \* For \`projects.regions.autoscalingPolicies\`,
            the resource name of the policy has the following format: \`projects/{project\_id}/regions/{region}/autoscalingPolicies/{policy\_id}\`
            \* For \`projects.locations.autoscalingPolicies\`, the resource name of
            the policy has the following format: \`projects/{project\_id}/locations/{location}/autoscalingPolicies/{policy\_id}\`'
          type: string
          x-dcl-go-name: Name
          x-kubernetes-immutable: true
        project:
          description: The project for the resource
          type: string
          x-dcl-go-name: Project
          x-kubernetes-immutable: true
        secondaryWorkerConfig:
          description: Optional. Describes how the autoscaler will operate for secondary
            workers.
          properties:
            maxInstances:
              description: 'Required. Maximum number of instances for this group.
                Required for primary workers. Note that by default, clusters will
                not use secondary workers. Required for secondary workers if the minimum
                secondary instances is set. Primary workers - Bounds: [min\_instances,
                ). Secondary workers - Bounds: [min\_instances, ). Default: 0.'
              format: int64
              type: integer
              x-dcl-go-name: MaxInstances
              x-kubernetes-immutable: true
            minInstances:
              description: 'Optional. Minimum number of instances for this group.
                Primary workers - Bounds: . Default: 0.'
              format: int64
              type: integer
              x-dcl-go-name: MinInstances
              x-kubernetes-immutable: true
            weight:
              description: 'Optional. Weight for the instance group, which is used
                to determine the fraction of total workers in the cluster from this
                instance group. For example, if primary workers have weight 2, and
                secondary workers have weight 1, the cluster will have approximately
                2 primary workers for each secondary worker. The cluster may not reach
                the specified balance if constrained by min/max bounds or other autoscaling
                settings. For example, if \`max\_instances\` for secondary workers
                is 0, then only primary workers will be added. The cluster can also
                be out of balance when created. If weight is not set on any instance
                group, the cluster will default to equal weight for all groups: the
                cluster will attempt to maintain an equal number of workers in each
                group within the configured size bounds for each group. If weight
                is set for one group only, the cluster will default to zero weight
                on the unset group. For example if weight is set only on primary workers,
                the cluster will use primary workers only and no secondary workers.'
              format: int64
              type: integer
              x-dcl-go-name: Weight
              x-kubernetes-immutable: true
          required:
          - maxInstances
          type: object
          x-dcl-go-name: SecondaryWorkerConfig
          x-dcl-go-type: AutoscalingPolicySecondaryWorkerConfig
        workerConfig:
          description: Required. Describes how the autoscaler will operate for primary
            workers.
          properties:
            maxInstances:
              description: 'Required. Maximum number of instances for this group.
                Required for primary workers. Note that by default, clusters will
                not use secondary workers. Required for secondary workers if the minimum
                secondary instances is set. Primary workers - Bounds: [min\_instances,
                ). Secondary workers - Bounds: [min\_instances, ). Default: 0.'
              format: int64
              type: integer
              x-dcl-go-name: MaxInstances
              x-kubernetes-immutable: true
            minInstances:
              description: 'Optional. Minimum number of instances for this group.
                Primary workers - Bounds: . Default: 0.'
              format: int64
              type: integer
              x-dcl-go-name: MinInstances
              x-kubernetes-immutable: true
            weight:
              description: 'Optional. Weight for the instance group, which is used
                to determine the fraction of total workers in the cluster from this
                instance group. For example, if primary workers have weight 2, and
                secondary workers have weight 1, the cluster will have approximately
                2 primary workers for each secondary worker. The cluster may not reach
                the specified balance if constrained by min/max bounds or other autoscaling
                settings. For example, if \`max\_instances\` for secondary workers
                is 0, then only primary workers will be added. The cluster can also
                be out of balance when created. If weight is not set on any instance
                group, the cluster will default to equal weight for all groups: the
                cluster will attempt to maintain an equal number of workers in each
                group within the configured size bounds for each group. If weight
                is set for one group only, the cluster will default to zero weight
                on the unset group. For example if weight is set only on primary workers,
                the cluster will use primary workers only and no secondary workers.'
              format: int64
              type: integer
              x-dcl-go-name: Weight
              x-kubernetes-immutable: true
          required:
          - maxInstances
          type: object
          x-dcl-go-name: WorkerConfig
          x-dcl-go-type: AutoscalingPolicyWorkerConfig
      required:
      - name
      - basicAlgorithm
      - workerConfig
      - project
      - location
      title: AutoscalingPolicy
      type: object
      x-dcl-id: projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{name}}
      x-dcl-locations: []
      x-dcl-parent-container: project
      x-dcl-uses-state-hint: false
info:
  description: DCL Specification for the Dataproc AutoscalingPolicy resource
  title: Dataproc/AutoscalingPolicy
  x-dcl-has-iam: false
paths:
  list:
    description: The function called used to list information about many AutoscalingPolicy
    parameters:
    - name: project
      required: true
    - name: location
      required: true
