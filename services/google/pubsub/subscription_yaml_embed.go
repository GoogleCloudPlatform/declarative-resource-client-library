// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// GENERATED BY gen_go_data.go
// gen_go_data -package pubsub -var YAML_subscription blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/pubsub/subscription.yaml

package pubsub

// blaze-out/k8-fastbuild/genfiles/cloud/graphite/mmv2/services/google/pubsub/subscription.yaml
var YAML_subscription = []byte("info:\n  title: Pubsub/Subscription\n  description: DCL Specification for the Pubsub Subscription resource\n  x-dcl-has-iam: false\npaths:\n  get:\n    description: The function used to get information about a Subscription\n    parameters:\n    - name: Subscription\n      required: true\n      description: A full instance of a Subscription\n  apply:\n    description: The function used to apply information about a Subscription\n    parameters:\n    - name: Subscription\n      required: true\n      description: A full instance of a Subscription\n  delete:\n    description: The function used to delete a Subscription\n    parameters:\n    - name: Subscription\n      required: true\n      description: A full instance of a Subscription\n  deleteAll:\n    description: The function used to delete all Subscription\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\n  list:\n    description: The function used to list information about many Subscription\n    parameters:\n    - name: project\n      required: true\n      schema:\n        type: string\ncomponents:\n  schemas:\n    Subscription:\n      title: Subscription\n      x-dcl-id: projects/{{project}}/subscriptions/{{name}}\n      x-dcl-parent-container: project\n      x-dcl-labels: labels\n      type: object\n      required:\n      - name\n      - topic\n      - project\n      properties:\n        ackDeadlineSeconds:\n          type: integer\n          format: int64\n          x-dcl-go-name: AckDeadlineSeconds\n          description: The approximate amount of time (on a best-effort basis) Pub/Sub\n            waits for the subscriber to acknowledge receipt before resending the message.\n            In the interval after the message is delivered and before it is acknowledged,\n            it is considered to be _outstanding_. During that time period, the message\n            will not be redelivered (on a best-effort basis). For pull subscriptions,\n            this value is used as the initial value for the ack deadline. To override\n            this value for a given message, call `ModifyAckDeadline` with the corresponding\n            `ack_id` if using non-streaming pull or send the `ack_id` in a `StreamingModifyAckDeadlineRequest`\n            if using streaming pull. The minimum custom deadline you can specify is\n            10 seconds. The maximum custom deadline you can specify is 600 seconds\n            (10 minutes). If this parameter is 0, a default value of 10 seconds is\n            used. For push delivery, this value is also used to set the request timeout\n            for the call to the push endpoint. If the subscriber never acknowledges\n            the message, the Pub/Sub system will eventually redeliver the message.\n          x-kubernetes-immutable: true\n        deadLetterPolicy:\n          type: object\n          x-dcl-go-name: DeadLetterPolicy\n          x-dcl-go-type: SubscriptionDeadLetterPolicy\n          description: A policy that specifies the conditions for dead lettering messages\n            in this subscription. If dead_letter_policy is not set, dead lettering\n            is disabled. The Cloud Pub/Sub service account associated with this subscriptions's\n            parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)\n            must have permission to Acknowledge() messages on this subscription.\n          x-kubernetes-immutable: true\n          properties:\n            deadLetterTopic:\n              type: string\n              x-dcl-go-name: DeadLetterTopic\n              description: The name of the topic to which dead letter messages should\n                be published. Format is `projects/{project}/topics/{topic}`.The Cloud\n                Pub/Sub service account associated with the enclosing subscription's\n                parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com)\n                must have permission to Publish() to this topic. The operation will\n                fail if the topic does not exist. Users should ensure that there is\n                a subscription attached to this topic since messages published to\n                a topic with no subscriptions are lost.\n              x-kubernetes-immutable: true\n              x-dcl-references:\n              - resource: Pubsub/Topic\n                field: name\n            maxDeliveryAttempts:\n              type: integer\n              format: int64\n              x-dcl-go-name: MaxDeliveryAttempts\n              description: The maximum number of delivery attempts for any message.\n                The value must be between 5 and 100. The number of delivery attempts\n                is defined as 1 + (the sum of number of NACKs and number of times\n                the acknowledgement deadline has been exceeded for the message). A\n                NACK is any call to ModifyAckDeadline with a 0 deadline. Note that\n                client libraries may automatically extend ack_deadlines. This field\n                will be honored on a best effort basis. If this parameter is 0, a\n                default value of 5 is used.\n              x-kubernetes-immutable: true\n        expirationPolicy:\n          type: object\n          x-dcl-go-name: ExpirationPolicy\n          x-dcl-go-type: SubscriptionExpirationPolicy\n          description: 'A policy that specifies the conditions for this subscription''s\n            expiration. A subscription is considered active as long as any connected\n            subscriber is successfully consuming messages from the subscription or\n            is issuing operations on the subscription. If expirationPolicy is not\n            set, a default policy with ttl of 31 days will be used. The minimum allowed\n            value for expirationPolicy.ttl is 1 day. '\n          properties:\n            ttl:\n              type: string\n              x-dcl-go-name: Ttl\n              description: 'Specifies the \"time-to-live\" duration for an associated\n                resource. The resource expires if it is not active for a period of\n                ttl. The definition of \"activity\" depends on the type of the associated\n                resource. The minimum and maximum allowed values for ttl depend on\n                the type of the associated resource, as well. If ttl is not set in\n                expirationPolicy, the associated resource never expires. A duration\n                in seconds with up to nine fractional digits, terminated by ''s''.\n                Example - \"3.5s\". '\n        labels:\n          type: object\n          additionalProperties:\n            type: string\n          x-dcl-go-name: Labels\n          description: 'A set of key/value label pairs to assign to this Subscription. '\n        messageRetentionDuration:\n          type: string\n          x-dcl-go-name: MessageRetentionDuration\n          description: 'How long to retain unacknowledged messages in the subscription''s\n            backlog, from the moment a message is published. If retainAckedMessages\n            is true, then this also configures the retention of acknowledged messages,\n            and thus configures how far back in time a subscriptions.seek can be done.\n            Defaults to 7 days. Cannot be more than 7 days (`\"604800s\"`) or less than\n            10 minutes (`\"600s\"`).  A duration in seconds with up to nine fractional\n            digits, terminated by ''s''. Example: `\"600.5s\"`. '\n        name:\n          type: string\n          x-dcl-go-name: Name\n          description: Name of the subscription.\n          x-kubernetes-immutable: true\n        project:\n          type: string\n          x-dcl-go-name: Project\n          description: The project id of the resource.\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Cloudresourcemanager/Project\n            field: name\n            parent: true\n        pushConfig:\n          type: object\n          x-dcl-go-name: PushConfig\n          x-dcl-go-type: SubscriptionPushConfig\n          description: If push delivery is used with this subscription, this field\n            is used to configure it. An empty `pushConfig` signifies that the subscriber\n            will pull and ack messages using API methods.\n          x-kubernetes-immutable: true\n          required:\n          - pushEndpoint\n          properties:\n            attributes:\n              type: object\n              additionalProperties:\n                type: string\n              x-dcl-go-name: Attributes\n              description: |-\n                Endpoint configuration attributes that can be used to control different aspects of the message delivery. The only currently supported attribute is `x-goog-version`, which you can use to change the format of the pushed message. This attribute indicates the version of the data expected by the endpoint. This controls the shape of the pushed message (i.e., its fields and metadata). If not present during the `CreateSubscription` call, it will default to the version of the Pub/Sub API used to make such call. If not present in a `ModifyPushConfig` call, its value will not be changed. `GetSubscription` calls will always return a valid version, even if the subscription was created without this attribute. The only supported values for the `x-goog-version` attribute are: * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API. * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API. For example:\n\n                    attributes { \"x-goog-version\": \"v1\" }\n              x-kubernetes-immutable: true\n              default: '{\"x-goog-version\":\"v1\"}'\n            oidcToken:\n              type: object\n              x-dcl-go-name: OidcToken\n              x-dcl-go-type: SubscriptionPushConfigOidcToken\n              description: If specified, Pub/Sub will generate and attach an OIDC\n                JWT token as an `Authorization` header in the HTTP request for every\n                pushed message.\n              x-kubernetes-immutable: true\n              properties:\n                audience:\n                  type: string\n                  x-dcl-go-name: Audience\n                  description: 'Audience to be used when generating OIDC token. The\n                    audience claim identifies the recipients that the JWT is intended\n                    for. The audience value is a single case-sensitive string. Having\n                    multiple values (array) for the audience field is not supported.\n                    More info about the OIDC JWT token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3\n                    Note: if not specified, the Push endpoint URL will be used.'\n                  x-kubernetes-immutable: true\n                serviceAccountEmail:\n                  type: string\n                  x-dcl-go-name: ServiceAccountEmail\n                  description: '[Service account email](https://cloud.google.com/iam/docs/service-accounts)\n                    to be used for generating the OIDC token. The caller (for CreateSubscription,\n                    UpdateSubscription, and ModifyPushConfig RPCs) must have the iam.serviceAccounts.actAs\n                    permission for the service account.'\n                  x-kubernetes-immutable: true\n            pushEndpoint:\n              type: string\n              x-dcl-go-name: PushEndpoint\n              description: A URL locating the endpoint to which messages should be\n                pushed. For example, a Webhook endpoint might use `https://example.com/push`.\n              x-kubernetes-immutable: true\n        retainAckedMessages:\n          type: boolean\n          x-dcl-go-name: RetainAckedMessages\n          description: 'Indicates whether to retain acknowledged messages. If `true`,\n            then messages are not expunged from the subscription''s backlog, even\n            if they are acknowledged, until they fall out of the messageRetentionDuration\n            window. '\n        topic:\n          type: string\n          x-dcl-go-name: Topic\n          description: 'A reference to a Topic resource. '\n          x-kubernetes-immutable: true\n          x-dcl-references:\n          - resource: Pubsub/Topic\n            field: name\n")

// 12155 bytes
// MD5: a420127191af768f9668db152488a9a6
