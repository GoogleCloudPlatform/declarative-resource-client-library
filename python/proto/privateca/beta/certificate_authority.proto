// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum PrivatecaBetaCertificateAuthorityTypeEnum {
  PrivatecaBetaCertificateAuthorityTypeEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityTypeEnumTYPE_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityTypeEnumSELF_SIGNED = 2;
  PrivatecaBetaCertificateAuthorityTypeEnumSUBORDINATE = 3;
}

enum PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnum {
  PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnumKEY_TYPE_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnumPEM_RSA_KEY = 2;
  PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnumPEM_EC_KEY = 3;
}

enum PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnum {
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumSIGN_HASH_ALGORITHM_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PSS_2048_SHA256 = 2;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PSS_3072_SHA256 = 3;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PSS_4096_SHA256 = 4;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PKCS1_2048_SHA256 = 5;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PKCS1_3072_SHA256 = 6;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumRSA_PKCS1_4096_SHA256 = 7;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumEC_P256_SHA256 = 8;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnumEC_P384_SHA384 = 9;
}

enum PrivatecaBetaCertificateAuthorityTierEnum {
  PrivatecaBetaCertificateAuthorityTierEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityTierEnumTIER_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityTierEnumENTERPRISE = 2;
  PrivatecaBetaCertificateAuthorityTierEnumDEVOPS = 3;
}

enum PrivatecaBetaCertificateAuthorityStateEnum {
  PrivatecaBetaCertificateAuthorityStateEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityStateEnumSTATE_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityStateEnumENABLED = 2;
  PrivatecaBetaCertificateAuthorityStateEnumDISABLED = 3;
  PrivatecaBetaCertificateAuthorityStateEnumSTAGED = 4;
  PrivatecaBetaCertificateAuthorityStateEnumAWAITING_USER_ACTIVATION = 5;
  PrivatecaBetaCertificateAuthorityStateEnumDELETED = 6;
}

enum PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyFormatEnum {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyFormatEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyFormatEnumKEY_FORMAT_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyFormatEnumPEM = 2;
}

enum PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnum {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnumNO_VALUE_DO_NOT_USE = 0;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnumTYPE_UNSPECIFIED = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnumSELF_SIGNED = 2;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnumSUBORDINATE = 3;
}

message PrivatecaBetaCertificateAuthority {
  string name = 1;
  PrivatecaBetaCertificateAuthorityTypeEnum type = 2;
  PrivatecaBetaCertificateAuthorityConfig config = 3;
  string lifetime = 4;
  PrivatecaBetaCertificateAuthorityKeySpec key_spec = 5;
  PrivatecaBetaCertificateAuthoritySubordinateConfig subordinate_config = 6;
  PrivatecaBetaCertificateAuthorityTierEnum tier = 7;
  PrivatecaBetaCertificateAuthorityStateEnum state = 8;
  repeated string pem_ca_certificates = 9;
  repeated PrivatecaBetaCertificateAuthorityCaCertificateDescriptions ca_certificate_descriptions = 10;
  string gcs_bucket = 11;
  PrivatecaBetaCertificateAuthorityAccessUrls access_urls = 12;
  string create_time = 13;
  string update_time = 14;
  string delete_time = 15;
  map<string, string> labels = 16;
  PrivatecaBetaCertificateAuthorityCertificatePolicy certificate_policy = 17;
  PrivatecaBetaCertificateAuthorityIssuingOptions issuing_options = 18;
  string project = 19;
  string location = 20;
}

message PrivatecaBetaCertificateAuthorityConfig {
  PrivatecaBetaCertificateAuthorityConfigSubjectConfig subject_config = 1;
  PrivatecaBetaCertificateAuthorityConfigPublicKey public_key = 2;
  PrivatecaBetaCertificateAuthorityConfigReusableConfig reusable_config = 3;
}

message PrivatecaBetaCertificateAuthorityConfigSubjectConfig {
  PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubject subject = 1;
  string common_name = 2;
  PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltName subject_alt_name = 3;
}

message PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubject {
  string country_code = 1;
  string organization = 2;
  string organizational_unit = 3;
  string locality = 4;
  string province = 5;
  string street_address = 6;
  string postal_code = 7;
}

message PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltName {
  repeated string dns_names = 1;
  repeated string uris = 2;
  repeated string email_addresses = 3;
  repeated string ip_addresses = 4;
  repeated PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltNameCustomSans custom_sans = 5;
}

message PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltNameCustomSans {
  PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltNameCustomSansObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityConfigSubjectConfigSubjectAltNameCustomSansObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityConfigPublicKey {
  string key = 1;
  PrivatecaBetaCertificateAuthorityConfigPublicKeyTypeEnum type = 2;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfig {
  string reusable_config = 1;
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValues reusable_config_values = 2;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValues {
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsage key_usage = 1;
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesCaOptions ca_options = 2;
  repeated PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsage {
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesAdditionalExtensions {
  PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityConfigReusableConfigReusableConfigValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityKeySpec {
  string cloud_kms_key_version = 1;
  PrivatecaBetaCertificateAuthorityKeySpecAlgorithmEnum algorithm = 2;
}

message PrivatecaBetaCertificateAuthoritySubordinateConfig {
  string certificate_authority = 1;
  PrivatecaBetaCertificateAuthoritySubordinateConfigPemIssuerChain pem_issuer_chain = 2;
}

message PrivatecaBetaCertificateAuthoritySubordinateConfigPemIssuerChain {
  repeated string pem_certificates = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptions {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescription subject_description = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKey public_key = 2;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectKeyId subject_key_id = 3;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsAuthorityKeyId authority_key_id = 4;
  repeated string crl_distribution_points = 5;
  repeated string aia_issuing_certificate_urls = 6;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsCertFingerprint cert_fingerprint = 7;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValues config_values = 8;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescription {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubject subject = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltName subject_alt_name = 2;
  string hex_serial_number = 3;
  string lifetime = 4;
  string not_before_time = 5;
  string not_after_time = 6;
  string common_name = 7;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubject {
  string common_name = 1;
  string country_code = 2;
  string organization = 3;
  string organizational_unit = 4;
  string locality = 5;
  string province = 6;
  string street_address = 7;
  string postal_code = 8;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltName {
  repeated string dns_names = 1;
  repeated string uris = 2;
  repeated string email_addresses = 3;
  repeated string ip_addresses = 4;
  repeated PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltNameCustomSans custom_sans = 5;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltNameCustomSans {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltNameCustomSansObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectDescriptionSubjectAltNameCustomSansObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKey {
  string key = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyFormatEnum format = 2;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsPublicKeyTypeEnum type = 3;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsSubjectKeyId {
  string key_id = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsAuthorityKeyId {
  string key_id = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsCertFingerprint {
  string sha256_hash = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValues {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsage key_usage = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesCaOptions ca_options = 2;
  repeated PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsage {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesAdditionalExtensions {
  PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityCaCertificateDescriptionsConfigValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityAccessUrls {
  string ca_certificate_access_url = 1;
  repeated string crl_access_urls = 2;
  string crl_access_url = 3;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicy {
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigList allowed_config_list = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValues overwrite_config_values = 2;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedLocationsAndOrganizations allowed_locations_and_organizations = 3;
  repeated string allowed_common_names = 4;
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedSans allowed_sans = 5;
  string maximum_lifetime = 6;
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedIssuanceModes allowed_issuance_modes = 7;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigList {
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValues allowed_config_values = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValues {
  string reusable_config = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValues reusable_config_values = 2;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValues {
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsage key_usage = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesCaOptions ca_options = 2;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsage {
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesAdditionalExtensions {
  PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedConfigListAllowedConfigValuesReusableConfigValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValues {
  string reusable_config = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValues reusable_config_values = 2;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValues {
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsage key_usage = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesCaOptions ca_options = 2;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesPolicyIds policy_ids = 3;
  repeated string aia_ocsp_servers = 4;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesAdditionalExtensions additional_extensions = 5;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsage {
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageBaseKeyUsage base_key_usage = 1;
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageExtendedKeyUsage extended_key_usage = 2;
  repeated PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageUnknownExtendedKeyUsages unknown_extended_key_usages = 3;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageBaseKeyUsage {
  bool digital_signature = 1;
  bool content_commitment = 2;
  bool key_encipherment = 3;
  bool data_encipherment = 4;
  bool key_agreement = 5;
  bool cert_sign = 6;
  bool crl_sign = 7;
  bool encipher_only = 8;
  bool decipher_only = 9;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageExtendedKeyUsage {
  bool server_auth = 1;
  bool client_auth = 2;
  bool code_signing = 3;
  bool email_protection = 4;
  bool time_stamping = 5;
  bool ocsp_signing = 6;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesKeyUsageUnknownExtendedKeyUsages {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesCaOptions {
  bool is_ca = 1;
  int64 max_issuer_path_length = 2;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesPolicyIds {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesAdditionalExtensions {
  PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesAdditionalExtensionsObjectId object_id = 1;
  bool critical = 2;
  string value = 3;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyOverwriteConfigValuesReusableConfigValuesAdditionalExtensionsObjectId {
  repeated int64 object_id_path = 1;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedLocationsAndOrganizations {
  string country_code = 1;
  string organization = 2;
  string organizational_unit = 3;
  string locality = 4;
  string province = 5;
  string street_address = 6;
  string postal_code = 7;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedSans {
  repeated string allowed_dns_names = 1;
  repeated string allowed_uris = 2;
  repeated string allowed_email_addresses = 3;
  repeated string allowed_ips = 4;
  bool allow_globbing_dns_wildcards = 5;
  bool allow_custom_sans = 6;
}

message PrivatecaBetaCertificateAuthorityCertificatePolicyAllowedIssuanceModes {
  bool allow_csr_based_issuance = 1;
  bool allow_config_based_issuance = 2;
}

message PrivatecaBetaCertificateAuthorityIssuingOptions {
  bool include_ca_cert_url = 1;
  bool include_crl_access_url = 2;
}

message ApplyPrivatecaBetaCertificateAuthorityRequest {
  PrivatecaBetaCertificateAuthority resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeletePrivatecaBetaCertificateAuthorityRequest {
  string service_account_file = 1;
  PrivatecaBetaCertificateAuthority resource = 2;
}

message ListPrivatecaBetaCertificateAuthorityRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListPrivatecaBetaCertificateAuthorityResponse {
  repeated PrivatecaBetaCertificateAuthority items = 1;
}

service PrivatecaBetaCertificateAuthorityService {
  rpc ApplyPrivatecaBetaCertificateAuthority(ApplyPrivatecaBetaCertificateAuthorityRequest) returns (PrivatecaBetaCertificateAuthority);
  rpc DeletePrivatecaBetaCertificateAuthority(DeletePrivatecaBetaCertificateAuthorityRequest) returns (google.protobuf.Empty);
  rpc ListPrivatecaBetaCertificateAuthority(ListPrivatecaBetaCertificateAuthorityRequest) returns (ListPrivatecaBetaCertificateAuthorityResponse);
}
