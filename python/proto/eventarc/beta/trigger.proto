// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

message EventarcBetaTrigger {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  string service_account = 4;
  EventarcBetaTriggerDestination destination = 5;
  EventarcBetaTriggerTransport transport = 6;
  string etag = 7;
  repeated EventarcBetaTriggerMatchingCriteria matching_criteria = 8;
  string project = 9;
  string location = 10;
}

message EventarcBetaTriggerDestination {
  EventarcBetaTriggerDestinationCloudRunService cloud_run_service = 1;
}

message EventarcBetaTriggerDestinationCloudRunService {
  string service = 1;
  string path = 2;
  string region = 3;
}

message EventarcBetaTriggerTransport {
  EventarcBetaTriggerTransportPubsub pubsub = 1;
}

message EventarcBetaTriggerTransportPubsub {
  string topic = 1;
  string subscription = 2;
}

message EventarcBetaTriggerMatchingCriteria {
  string attribute = 1;
  string value = 2;
}

message ApplyEventarcBetaTriggerRequest {
  EventarcBetaTrigger resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteEventarcBetaTriggerRequest {
  string service_account_file = 1;
  EventarcBetaTrigger resource = 2;
}

message ListEventarcBetaTriggerRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListEventarcBetaTriggerResponse {
  repeated EventarcBetaTrigger items = 1;
}
service EventarcBetaTriggerService {
  rpc ApplyEventarcBetaTrigger(ApplyEventarcBetaTriggerRequest) returns (EventarcBetaTrigger);
  rpc DeleteEventarcBetaTrigger(DeleteEventarcBetaTriggerRequest) returns (google.protobuf.Empty);
  rpc ListEventarcBetaTrigger(ListEventarcBetaTriggerRequest) returns (ListEventarcBetaTriggerResponse);
}
