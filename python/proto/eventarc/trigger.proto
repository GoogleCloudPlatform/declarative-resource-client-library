// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

message EventarcTrigger {
  string name = 1;
  string uid = 2;
  string create_time = 3;
  string update_time = 4;
  repeated EventarcTriggerEventFilters event_filters = 5;
  string service_account = 6;
  EventarcTriggerDestination destination = 7;
  EventarcTriggerTransport transport = 8;
  map<string, string> labels = 9;
  string etag = 10;
  string project = 11;
  string location = 12;
}

message EventarcTriggerEventFilters {
  string attribute = 1;
  string value = 2;
}

message EventarcTriggerDestination {
  EventarcTriggerDestinationCloudRun cloud_run = 1;
  string cloud_function = 2;
}

message EventarcTriggerDestinationCloudRun {
  string service = 1;
  string path = 2;
  string region = 3;
}

message EventarcTriggerTransport {
  EventarcTriggerTransportPubsub pubsub = 1;
}

message EventarcTriggerTransportPubsub {
  string topic = 1;
  string subscription = 2;
}

message ApplyEventarcTriggerRequest {
  EventarcTrigger resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteEventarcTriggerRequest {
  string service_account_file = 1;
  EventarcTrigger resource = 2;
}

message ListEventarcTriggerRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListEventarcTriggerResponse {
  repeated EventarcTrigger items = 1;
}

service EventarcTriggerService {
  rpc ApplyEventarcTrigger(ApplyEventarcTriggerRequest) returns (EventarcTrigger);
  rpc DeleteEventarcTrigger(DeleteEventarcTriggerRequest) returns (google.protobuf.Empty);
  rpc ListEventarcTrigger(ListEventarcTriggerRequest) returns (ListEventarcTriggerResponse);
}
