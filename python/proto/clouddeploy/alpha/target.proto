// Copyright 2025 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
edition = "2023";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.

option features.field_presence = IMPLICIT;

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ClouddeployAlphaTargetExecutionConfigsUsagesEnum {
  ClouddeployAlphaTargetExecutionConfigsUsagesEnumNO_VALUE_DO_NOT_USE = 0;
  ClouddeployAlphaTargetExecutionConfigsUsagesEnumEXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED = 1;
  ClouddeployAlphaTargetExecutionConfigsUsagesEnumRENDER = 2;
  ClouddeployAlphaTargetExecutionConfigsUsagesEnumDEPLOY = 3;
}

message ClouddeployAlphaTarget {
  string name = 1;
  string target_id = 2;
  string uid = 3;
  string description = 4;
  map<string, string> annotations = 5;
  map<string, string> labels = 6;
  bool require_approval = 7;
  string create_time = 8;
  string update_time = 9;
  ClouddeployAlphaTargetGke gke = 10;
  ClouddeployAlphaTargetAnthosCluster anthos_cluster = 11;
  string etag = 12;
  repeated ClouddeployAlphaTargetExecutionConfigs execution_configs = 13;
  string project = 14;
  string location = 15;
  ClouddeployAlphaTargetRun run = 16;
  ClouddeployAlphaTargetMultiTarget multi_target = 17;
  map<string, string> deploy_parameters = 18;
  ClouddeployAlphaTargetCustomTarget custom_target = 19;
  map<string, ClouddeployAlphaTargetAssociatedEntities> associated_entities = 20;
}

message ClouddeployAlphaTargetGke {
  string cluster = 1;
  bool internal_ip = 2;
  string proxy_url = 3;
  bool dns_endpoint = 4;
}

message ClouddeployAlphaTargetAnthosCluster {
  string membership = 1;
}

message ClouddeployAlphaTargetExecutionConfigs {
  repeated ClouddeployAlphaTargetExecutionConfigsUsagesEnum usages = 1;
  string worker_pool = 2;
  string service_account = 3;
  string artifact_storage = 4;
  string execution_timeout = 5;
  bool verbose = 6;
}

message ClouddeployAlphaTargetRun {
  string location = 1;
}

message ClouddeployAlphaTargetMultiTarget {
  repeated string target_ids = 1;
}

message ClouddeployAlphaTargetCustomTarget {
  string custom_target_type = 1;
}

message ClouddeployAlphaTargetAssociatedEntities {
  repeated ClouddeployAlphaTargetAssociatedEntitiesGkeClusters gke_clusters = 1;
  repeated ClouddeployAlphaTargetAssociatedEntitiesAnthosClusters anthos_clusters = 2;
}

message ClouddeployAlphaTargetAssociatedEntitiesGkeClusters {
  string cluster = 1;
  bool internal_ip = 2;
  string proxy_url = 3;
}

message ClouddeployAlphaTargetAssociatedEntitiesAnthosClusters {
  string membership = 1;
}

message ApplyClouddeployAlphaTargetRequest {
  ClouddeployAlphaTarget resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteClouddeployAlphaTargetRequest {
  string service_account_file = 1;
  ClouddeployAlphaTarget resource = 2;
}

message ListClouddeployAlphaTargetRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListClouddeployAlphaTargetResponse {
  repeated ClouddeployAlphaTarget items = 1;
}

service ClouddeployAlphaTargetService {
  rpc ApplyClouddeployAlphaTarget(ApplyClouddeployAlphaTargetRequest) returns (ClouddeployAlphaTarget);
  rpc DeleteClouddeployAlphaTarget(DeleteClouddeployAlphaTargetRequest) returns (google.protobuf.Empty);
  rpc ListClouddeployAlphaTarget(ListClouddeployAlphaTargetRequest) returns (ListClouddeployAlphaTargetResponse);
}
