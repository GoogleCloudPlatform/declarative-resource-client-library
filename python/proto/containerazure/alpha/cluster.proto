// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum ContainerazureAlphaClusterStateEnum {
  ContainerazureAlphaClusterStateEnumNO_VALUE_DO_NOT_USE = 0;
  ContainerazureAlphaClusterStateEnumSTATE_UNSPECIFIED = 1;
  ContainerazureAlphaClusterStateEnumPROVISIONING = 2;
  ContainerazureAlphaClusterStateEnumRUNNING = 3;
  ContainerazureAlphaClusterStateEnumRECONCILING = 4;
  ContainerazureAlphaClusterStateEnumSTOPPING = 5;
  ContainerazureAlphaClusterStateEnumERROR = 6;
  ContainerazureAlphaClusterStateEnumDEGRADED = 7;
}

message ContainerazureAlphaCluster {
  string name = 1;
  string description = 2;
  string azure_region = 3;
  string resource_group_id = 4;
  string client = 5;
  ContainerazureAlphaClusterNetworking networking = 6;
  ContainerazureAlphaClusterControlPlane control_plane = 7;
  ContainerazureAlphaClusterAuthorization authorization = 8;
  ContainerazureAlphaClusterStateEnum state = 9;
  string endpoint = 10;
  string uid = 11;
  bool reconciling = 12;
  string create_time = 13;
  string update_time = 14;
  string etag = 15;
  map<string, string> annotations = 16;
  ContainerazureAlphaClusterWorkloadIdentityConfig workload_identity_config = 17;
  string project = 18;
  string location = 19;
}

message ContainerazureAlphaClusterNetworking {
  string virtual_network_id = 1;
  repeated string pod_address_cidr_blocks = 2;
  repeated string service_address_cidr_blocks = 3;
}

message ContainerazureAlphaClusterControlPlane {
  string version = 1;
  string subnet_id = 2;
  string vm_size = 3;
  ContainerazureAlphaClusterControlPlaneSshConfig ssh_config = 4;
  ContainerazureAlphaClusterControlPlaneRootVolume root_volume = 5;
  ContainerazureAlphaClusterControlPlaneMainVolume main_volume = 6;
  ContainerazureAlphaClusterControlPlaneDatabaseEncryption database_encryption = 7;
  map<string, string> tags = 8;
  ContainerazureAlphaClusterControlPlaneProxyConfig proxy_config = 9;
  repeated ContainerazureAlphaClusterControlPlaneReplicaPlacements replica_placements = 10;
}

message ContainerazureAlphaClusterControlPlaneSshConfig {
  string authorized_key = 1;
}

message ContainerazureAlphaClusterControlPlaneRootVolume {
  int64 size_gib = 1;
}

message ContainerazureAlphaClusterControlPlaneMainVolume {
  int64 size_gib = 1;
}

message ContainerazureAlphaClusterControlPlaneDatabaseEncryption {
  string resource_group_id = 1;
  string kms_key_identifier = 2;
}

message ContainerazureAlphaClusterControlPlaneProxyConfig {
  string resource_group_id = 1;
  string secret_id = 2;
}

message ContainerazureAlphaClusterControlPlaneReplicaPlacements {
  string subnet_id = 1;
  string azure_availability_zone = 2;
}

message ContainerazureAlphaClusterAuthorization {
  repeated ContainerazureAlphaClusterAuthorizationAdminUsers admin_users = 1;
}

message ContainerazureAlphaClusterAuthorizationAdminUsers {
  string username = 1;
}

message ContainerazureAlphaClusterWorkloadIdentityConfig {
  string issuer_uri = 1;
  string workload_pool = 2;
  string identity_provider = 3;
}

message ApplyContainerazureAlphaClusterRequest {
  ContainerazureAlphaCluster resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteContainerazureAlphaClusterRequest {
  string service_account_file = 1;
  ContainerazureAlphaCluster resource = 2;
}

message ListContainerazureAlphaClusterRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListContainerazureAlphaClusterResponse {
  repeated ContainerazureAlphaCluster items = 1;
}

service ContainerazureAlphaClusterService {
  rpc ApplyContainerazureAlphaCluster(ApplyContainerazureAlphaClusterRequest) returns (ContainerazureAlphaCluster);
  rpc DeleteContainerazureAlphaCluster(DeleteContainerazureAlphaClusterRequest) returns (google.protobuf.Empty);
  rpc ListContainerazureAlphaCluster(ListContainerazureAlphaClusterRequest) returns (ListContainerazureAlphaClusterResponse);
}
