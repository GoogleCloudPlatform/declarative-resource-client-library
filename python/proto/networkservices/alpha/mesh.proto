// Copyright 2022 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum NetworkservicesAlphaMeshTypeEnum {
  NetworkservicesAlphaMeshTypeEnumNO_VALUE_DO_NOT_USE = 0;
  NetworkservicesAlphaMeshTypeEnumMATCH_TYPE_UNSPECIFIED = 1;
  NetworkservicesAlphaMeshTypeEnumMATCH_ANY = 2;
  NetworkservicesAlphaMeshTypeEnumMATCH_ALL = 3;
}

message NetworkservicesAlphaMesh {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  map<string, string> labels = 4;
  string description = 5;
  NetworkservicesAlphaMeshTypeEnum type = 6;
  string scope = 7;
  int64 interception_port = 8;
  string project = 9;
  string location = 10;
}

message ApplyNetworkservicesAlphaMeshRequest {
  NetworkservicesAlphaMesh resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkservicesAlphaMeshRequest {
  string service_account_file = 1;
  NetworkservicesAlphaMesh resource = 2;
}

message ListNetworkservicesAlphaMeshRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListNetworkservicesAlphaMeshResponse {
  repeated NetworkservicesAlphaMesh items = 1;
}

service NetworkservicesAlphaMeshService {
  rpc ApplyNetworkservicesAlphaMesh(ApplyNetworkservicesAlphaMeshRequest) returns (NetworkservicesAlphaMesh);
  rpc DeleteNetworkservicesAlphaMesh(DeleteNetworkservicesAlphaMeshRequest) returns (google.protobuf.Empty);
  rpc ListNetworkservicesAlphaMesh(ListNetworkservicesAlphaMeshRequest) returns (ListNetworkservicesAlphaMeshResponse);
}
