// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


message NetworkservicesAlphaTcpRoute {
  string name = 1;
  string create_time = 2;
  string update_time = 3;
  string description = 4;
  repeated NetworkservicesAlphaTcpRouteRules rules = 5;
  repeated string routers = 6;
  repeated string meshes = 7;
  repeated string gateways = 8;
  map<string, string> labels = 9;
  string project = 10;
  string location = 11;
}

message NetworkservicesAlphaTcpRouteRules {
  repeated NetworkservicesAlphaTcpRouteRulesMatches matches = 1;
  NetworkservicesAlphaTcpRouteRulesAction action = 2;
}

message NetworkservicesAlphaTcpRouteRulesMatches {
  string address = 1;
  string port = 2;
}

message NetworkservicesAlphaTcpRouteRulesAction {
  repeated NetworkservicesAlphaTcpRouteRulesActionDestinations destinations = 1;
  bool original_destination = 2;
}

message NetworkservicesAlphaTcpRouteRulesActionDestinations {
  int64 weight = 1;
  string service_name = 2;
}

message ApplyNetworkservicesAlphaTcpRouteRequest {
  NetworkservicesAlphaTcpRoute resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteNetworkservicesAlphaTcpRouteRequest {
  string service_account_file = 1;
  NetworkservicesAlphaTcpRoute resource = 2;
}

message ListNetworkservicesAlphaTcpRouteRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListNetworkservicesAlphaTcpRouteResponse {
  repeated NetworkservicesAlphaTcpRoute items = 1;
}

service NetworkservicesAlphaTcpRouteService {
  rpc ApplyNetworkservicesAlphaTcpRoute(ApplyNetworkservicesAlphaTcpRouteRequest) returns (NetworkservicesAlphaTcpRoute);
  rpc DeleteNetworkservicesAlphaTcpRoute(DeleteNetworkservicesAlphaTcpRouteRequest) returns (google.protobuf.Empty);
  rpc ListNetworkservicesAlphaTcpRoute(ListNetworkservicesAlphaTcpRouteRequest) returns (ListNetworkservicesAlphaTcpRouteResponse);
}
