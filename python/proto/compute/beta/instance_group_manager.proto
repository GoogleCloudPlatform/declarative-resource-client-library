// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeBetaInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeEnum {
  ComputeBetaInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeEnumPROACTIVE = 1;
  ComputeBetaInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeEnumNONE = 2;
}

enum ComputeBetaInstanceGroupManagerUpdatePolicyMinimalActionEnum {
  ComputeBetaInstanceGroupManagerUpdatePolicyMinimalActionEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaInstanceGroupManagerUpdatePolicyMinimalActionEnumRESTART = 1;
  ComputeBetaInstanceGroupManagerUpdatePolicyMinimalActionEnumREPLACE = 2;
}

message ComputeBetaInstanceGroupManager {
  string base_instance_name = 1;
  string creation_timestamp = 2;
  ComputeBetaInstanceGroupManagerDistributionPolicy distribution_policy = 3;
  ComputeBetaInstanceGroupManagerCurrentActions current_actions = 4;
  string description = 5;
  repeated ComputeBetaInstanceGroupManagerVersions versions = 6;
  int64 id = 7;
  string instance_group = 8;
  string instance_template = 9;
  string name = 10;
  repeated ComputeBetaInstanceGroupManagerNamedPorts named_ports = 11;
  ComputeBetaInstanceGroupManagerStatus status = 12;
  repeated string target_pools = 13;
  repeated ComputeBetaInstanceGroupManagerAutohealingPolicies autohealing_policies = 14;
  ComputeBetaInstanceGroupManagerUpdatePolicy update_policy = 15;
  int64 target_size = 16;
  string zone = 17;
  string region = 18;
  string project = 19;
  string location = 20;
}

message ComputeBetaInstanceGroupManagerDistributionPolicy {
  repeated ComputeBetaInstanceGroupManagerDistributionPolicyZones zones = 1;
}

message ComputeBetaInstanceGroupManagerDistributionPolicyZones {
  string zone = 1;
}

message ComputeBetaInstanceGroupManagerCurrentActions {
  int64 abandoning = 1;
  int64 creating = 2;
  int64 creating_without_retries = 3;
  int64 deleting = 4;
  int64 none = 5;
  int64 recreating = 6;
  int64 refreshing = 7;
  int64 restarting = 8;
}

message ComputeBetaInstanceGroupManagerVersions {
  string name = 1;
  string instance_template = 2;
  ComputeBetaInstanceGroupManagerVersionsTargetSize target_size = 3;
}

message ComputeBetaInstanceGroupManagerVersionsTargetSize {
  int64 fixed = 1;
  int64 percent = 2;
  int64 calculated = 3;
}

message ComputeBetaInstanceGroupManagerNamedPorts {
  string name = 1;
  int64 port = 2;
}

message ComputeBetaInstanceGroupManagerStatus {
  bool is_stable = 1;
  ComputeBetaInstanceGroupManagerStatusVersionTarget version_target = 2;
  string autoscalar = 3;
}

message ComputeBetaInstanceGroupManagerStatusVersionTarget {
  bool is_reached = 1;
}

message ComputeBetaInstanceGroupManagerAutohealingPolicies {
  string health_check = 1;
  int64 initial_delay_sec = 2;
}

message ComputeBetaInstanceGroupManagerUpdatePolicy {
  ComputeBetaInstanceGroupManagerUpdatePolicyInstanceRedistributionTypeEnum instance_redistribution_type = 1;
  ComputeBetaInstanceGroupManagerUpdatePolicyMinimalActionEnum minimal_action = 2;
  ComputeBetaInstanceGroupManagerUpdatePolicyMaxSurge max_surge = 3;
}

message ComputeBetaInstanceGroupManagerUpdatePolicyMaxSurge {
  int64 fixed = 1;
  int64 percent = 2;
  int64 calculated = 3;
  ComputeBetaInstanceGroupManagerUpdatePolicyMaxSurgeMaxUnavailable max_unavailable = 4;
}

message ComputeBetaInstanceGroupManagerUpdatePolicyMaxSurgeMaxUnavailable {
  int64 fixed = 1;
  int64 percent = 2;
  int64 calculated = 3;
}

message ApplyComputeBetaInstanceGroupManagerRequest {
  ComputeBetaInstanceGroupManager resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeBetaInstanceGroupManagerRequest {
  string service_account_file = 1;
  ComputeBetaInstanceGroupManager resource = 2;
}

message ListComputeBetaInstanceGroupManagerRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListComputeBetaInstanceGroupManagerResponse {
  repeated ComputeBetaInstanceGroupManager items = 1;
}
service ComputeBetaInstanceGroupManagerService {
  rpc ApplyComputeBetaInstanceGroupManager(ApplyComputeBetaInstanceGroupManagerRequest) returns (ComputeBetaInstanceGroupManager);
  rpc DeleteComputeBetaInstanceGroupManager(DeleteComputeBetaInstanceGroupManagerRequest) returns (google.protobuf.Empty);
  rpc ListComputeBetaInstanceGroupManager(ListComputeBetaInstanceGroupManagerRequest) returns (ListComputeBetaInstanceGroupManagerResponse);
}
