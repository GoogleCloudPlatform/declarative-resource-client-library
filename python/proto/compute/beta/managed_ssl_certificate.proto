// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum ComputeBetaManagedSslCertificateManagedStatusEnum {
  ComputeBetaManagedSslCertificateManagedStatusEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaManagedSslCertificateManagedStatusEnumPENDING = 1;
  ComputeBetaManagedSslCertificateManagedStatusEnumRUNNING = 2;
  ComputeBetaManagedSslCertificateManagedStatusEnumDONE = 3;
}

enum ComputeBetaManagedSslCertificateTypeEnum {
  ComputeBetaManagedSslCertificateTypeEnumNO_VALUE_DO_NOT_USE = 0;
  ComputeBetaManagedSslCertificateTypeEnumMANAGED = 1;
}

message ComputeBetaManagedSslCertificate {
  int64 id = 1;
  string name = 2;
  string description = 3;
  string self_link = 4;
  ComputeBetaManagedSslCertificateManaged managed = 5;
  ComputeBetaManagedSslCertificateTypeEnum type = 6;
  repeated string subject_alternative_names = 7;
  string expire_time = 8;
  string project = 9;
}

message ComputeBetaManagedSslCertificateManaged {
  repeated string domains = 1;
  ComputeBetaManagedSslCertificateManagedStatusEnum status = 2;
  map<string, string> domain_status = 3;
}

message ApplyComputeBetaManagedSslCertificateRequest {
  ComputeBetaManagedSslCertificate resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteComputeBetaManagedSslCertificateRequest {
  string service_account_file = 1;
  ComputeBetaManagedSslCertificate resource = 2;
}

message ListComputeBetaManagedSslCertificateRequest {
  string service_account_file = 1;
  string Project = 2;
}

message ListComputeBetaManagedSslCertificateResponse {
  repeated ComputeBetaManagedSslCertificate items = 1;
}
service ComputeBetaManagedSslCertificateService {
  rpc ApplyComputeBetaManagedSslCertificate(ApplyComputeBetaManagedSslCertificateRequest) returns (ComputeBetaManagedSslCertificate);
  rpc DeleteComputeBetaManagedSslCertificate(DeleteComputeBetaManagedSslCertificateRequest) returns (google.protobuf.Empty);
  rpc ListComputeBetaManagedSslCertificate(ListComputeBetaManagedSslCertificateRequest) returns (ListComputeBetaManagedSslCertificateResponse);
}
