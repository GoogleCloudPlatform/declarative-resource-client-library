// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

message RunService {
  string api_version = 1;
  string kind = 2;
  RunServiceMetadata metadata = 3;
  RunServiceSpec spec = 4;
  RunServiceStatus status = 5;
  string project = 6;
  string location = 7;
  string name = 8;
}

message RunServiceMetadata {
  string name = 1;
  string generate_name = 2;
  string namespace = 3;
  string self_link = 4;
  string uid = 5;
  string resource_version = 6;
  int64 generation = 7;
  RunServiceMetadataCreateTime create_time = 8;
  map<string, string> labels = 9;
  map<string, string> annotations = 10;
  repeated RunServiceMetadataOwnerReferences owner_references = 11;
  RunServiceMetadataDeleteTime delete_time = 12;
  int64 deletion_grace_period_seconds = 13;
  repeated string finalizers = 14;
  string cluster_name = 15;
}

message RunServiceMetadataCreateTime {
  int64 seconds = 1;
  int64 nanos = 2;
}

message RunServiceMetadataOwnerReferences {
  string api_version = 1;
  string kind = 2;
  string name = 3;
  string uid = 4;
  bool controller = 5;
  bool block_owner_deletion = 6;
}

message RunServiceMetadataDeleteTime {
  int64 seconds = 1;
  int64 nanos = 2;
}

message RunServiceSpec {
  RunServiceSpecTemplate template = 1;
  repeated RunServiceSpecTraffic traffic = 2;
}

message RunServiceSpecTemplate {
  RunServiceSpecTemplateMetadata metadata = 1;
  RunServiceSpecTemplateSpec spec = 2;
}

message RunServiceSpecTemplateMetadata {
  string name = 1;
  string generate_name = 2;
  string namespace = 3;
  string self_link = 4;
  string uid = 5;
  string resource_version = 6;
  int64 generation = 7;
  RunServiceSpecTemplateMetadataCreateTime create_time = 8;
  map<string, string> labels = 9;
  map<string, string> annotations = 10;
  repeated RunServiceSpecTemplateMetadataOwnerReferences owner_references = 11;
  RunServiceSpecTemplateMetadataDeleteTime delete_time = 12;
  int64 deletion_grace_period_seconds = 13;
  repeated string finalizers = 14;
  string cluster_name = 15;
}

message RunServiceSpecTemplateMetadataCreateTime {
  int64 seconds = 1;
  int64 nanos = 2;
}

message RunServiceSpecTemplateMetadataOwnerReferences {
  string api_version = 1;
  string kind = 2;
  string name = 3;
  string uid = 4;
  bool controller = 5;
  bool block_owner_deletion = 6;
}

message RunServiceSpecTemplateMetadataDeleteTime {
  int64 seconds = 1;
  int64 nanos = 2;
}

message RunServiceSpecTemplateSpec {
  int64 container_concurrency = 1;
  int64 timeout_seconds = 2;
  string service_account_name = 3;
  repeated RunServiceSpecTemplateSpecContainers containers = 4;
  repeated RunServiceSpecTemplateSpecVolumes volumes = 5;
}

message RunServiceSpecTemplateSpecContainers {
  string name = 1;
  string image = 2;
  repeated string command = 3;
  repeated string args = 4;
  repeated RunServiceSpecTemplateSpecContainersEnv env = 5;
  RunServiceSpecTemplateSpecContainersResources resources = 6;
  string working_dir = 7;
  repeated RunServiceSpecTemplateSpecContainersPorts ports = 8;
  repeated RunServiceSpecTemplateSpecContainersEnvFrom env_from = 9;
  repeated RunServiceSpecTemplateSpecContainersVolumeMounts volume_mounts = 10;
  RunServiceSpecTemplateSpecContainersLivenessProbe liveness_probe = 11;
  RunServiceSpecTemplateSpecContainersReadinessProbe readiness_probe = 12;
  string termination_message_path = 13;
  string termination_message_policy = 14;
  string image_pull_policy = 15;
  RunServiceSpecTemplateSpecContainersSecurityContext security_context = 16;
}

message RunServiceSpecTemplateSpecContainersEnv {
  string name = 1;
  string value = 2;
  RunServiceSpecTemplateSpecContainersEnvValueFrom value_from = 3;
}

message RunServiceSpecTemplateSpecContainersEnvValueFrom {
  RunServiceSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef config_map_key_ref = 1;
  RunServiceSpecTemplateSpecContainersEnvValueFromSecretKeyRef secret_key_ref = 2;
}

message RunServiceSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef {
  RunServiceSpecTemplateSpecContainersEnvValueFromConfigMapKeyRefLocalObjectReference local_object_reference = 1;
  string key = 2;
  bool optional = 3;
  string name = 4;
}

message RunServiceSpecTemplateSpecContainersEnvValueFromConfigMapKeyRefLocalObjectReference {
  string name = 1;
}

message RunServiceSpecTemplateSpecContainersEnvValueFromSecretKeyRef {
  RunServiceSpecTemplateSpecContainersEnvValueFromSecretKeyRefLocalObjectReference local_object_reference = 1;
  string key = 2;
  bool optional = 3;
  string name = 4;
}

message RunServiceSpecTemplateSpecContainersEnvValueFromSecretKeyRefLocalObjectReference {
  string name = 1;
}

message RunServiceSpecTemplateSpecContainersResources {
  map<string, string> limits = 1;
  map<string, string> requests = 2;
}

message RunServiceSpecTemplateSpecContainersPorts {
  string name = 1;
  int64 container_port = 2;
  string protocol = 3;
}

message RunServiceSpecTemplateSpecContainersEnvFrom {
  string prefix = 1;
  RunServiceSpecTemplateSpecContainersEnvFromConfigMapRef config_map_ref = 2;
  RunServiceSpecTemplateSpecContainersEnvFromSecretRef secret_ref = 3;
}

message RunServiceSpecTemplateSpecContainersEnvFromConfigMapRef {
  RunServiceSpecTemplateSpecContainersEnvFromConfigMapRefLocalObjectReference local_object_reference = 1;
  bool optional = 2;
  string name = 3;
}

message RunServiceSpecTemplateSpecContainersEnvFromConfigMapRefLocalObjectReference {
  string name = 1;
}

message RunServiceSpecTemplateSpecContainersEnvFromSecretRef {
  RunServiceSpecTemplateSpecContainersEnvFromSecretRefLocalObjectReference local_object_reference = 1;
  bool optional = 2;
  string name = 3;
}

message RunServiceSpecTemplateSpecContainersEnvFromSecretRefLocalObjectReference {
  string name = 1;
}

message RunServiceSpecTemplateSpecContainersVolumeMounts {
  string name = 1;
  bool read_only = 2;
  string mount_path = 3;
  string sub_path = 4;
}

message RunServiceSpecTemplateSpecContainersLivenessProbe {
  int64 initial_delay_seconds = 1;
  int64 timeout_seconds = 2;
  int64 period_seconds = 3;
  int64 success_threshold = 4;
  int64 failure_threshold = 5;
  RunServiceSpecTemplateSpecContainersLivenessProbeExec exec = 6;
  RunServiceSpecTemplateSpecContainersLivenessProbeHttpGet http_get = 7;
  RunServiceSpecTemplateSpecContainersLivenessProbeTcpSocket tcp_socket = 8;
}

message RunServiceSpecTemplateSpecContainersLivenessProbeExec {
  string command = 1;
}

message RunServiceSpecTemplateSpecContainersLivenessProbeHttpGet {
  string path = 1;
  string host = 2;
  string scheme = 3;
  repeated RunServiceSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders http_headers = 4;
}

message RunServiceSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders {
  string name = 1;
  string value = 2;
}

message RunServiceSpecTemplateSpecContainersLivenessProbeTcpSocket {
  int64 port = 1;
  string host = 2;
}

message RunServiceSpecTemplateSpecContainersReadinessProbe {
  int64 initial_delay_seconds = 1;
  int64 timeout_seconds = 2;
  int64 period_seconds = 3;
  int64 success_threshold = 4;
  int64 failure_threshold = 5;
  RunServiceSpecTemplateSpecContainersReadinessProbeExec exec = 6;
  RunServiceSpecTemplateSpecContainersReadinessProbeHttpGet http_get = 7;
  RunServiceSpecTemplateSpecContainersReadinessProbeTcpSocket tcp_socket = 8;
}

message RunServiceSpecTemplateSpecContainersReadinessProbeExec {
  string command = 1;
}

message RunServiceSpecTemplateSpecContainersReadinessProbeHttpGet {
  string path = 1;
  string host = 2;
  string scheme = 3;
  repeated RunServiceSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders http_headers = 4;
}

message RunServiceSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders {
  string name = 1;
  string value = 2;
}

message RunServiceSpecTemplateSpecContainersReadinessProbeTcpSocket {
  int64 port = 1;
  string host = 2;
}

message RunServiceSpecTemplateSpecContainersSecurityContext {
  int64 run_as_user = 1;
}

message RunServiceSpecTemplateSpecVolumes {
  string name = 1;
  RunServiceSpecTemplateSpecVolumesSecret secret = 2;
  RunServiceSpecTemplateSpecVolumesConfigMap config_map = 3;
}

message RunServiceSpecTemplateSpecVolumesSecret {
  string secret_name = 1;
  repeated RunServiceSpecTemplateSpecVolumesSecretItems items = 2;
  int64 default_mode = 3;
  bool optional = 4;
}

message RunServiceSpecTemplateSpecVolumesSecretItems {
  string key = 1;
  string path = 2;
  int64 mode = 3;
}

message RunServiceSpecTemplateSpecVolumesConfigMap {
  string name = 1;
  repeated RunServiceSpecTemplateSpecVolumesConfigMapItems items = 2;
  int64 default_mode = 3;
  bool optional = 4;
}

message RunServiceSpecTemplateSpecVolumesConfigMapItems {
  string key = 1;
  string path = 2;
  int64 mode = 3;
}

message RunServiceSpecTraffic {
  string configuration_name = 1;
  string revision_name = 2;
  int64 percent = 3;
  string tag = 4;
  bool latest_revision = 5;
  string url = 6;
}

message RunServiceStatus {
  int64 observed_generation = 1;
  repeated RunServiceStatusConditions conditions = 2;
  string latest_ready_revision_name = 3;
  string latest_created_revision_name = 4;
  repeated RunServiceStatusTraffic traffic = 5;
  string url = 6;
  RunServiceStatusAddress address = 7;
}

message RunServiceStatusConditions {
  string type = 1;
  string status = 2;
  string reason = 3;
  string message = 4;
  RunServiceStatusConditionsLastTransitionTime last_transition_time = 5;
  string severity = 6;
}

message RunServiceStatusConditionsLastTransitionTime {
  int64 seconds = 1;
  int64 nanos = 2;
}

message RunServiceStatusTraffic {
  string configuration_name = 1;
  string revision_name = 2;
  int64 percent = 3;
  string tag = 4;
  bool latest_revision = 5;
  string url = 6;
}

message RunServiceStatusAddress {
  string url = 1;
}

message ApplyRunServiceRequest {
  RunService resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteRunServiceRequest {
  string service_account_file = 1;
  RunService resource = 2;
}

message ListRunServiceRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListRunServiceResponse {
  repeated RunService items = 1;
}
service RunServiceService {
  rpc ApplyRunService(ApplyRunServiceRequest) returns (RunService);
  rpc DeleteRunService(DeleteRunServiceRequest) returns (google.protobuf.Empty);
  rpc ListRunService(ListRunServiceRequest) returns (ListRunServiceResponse);
}
