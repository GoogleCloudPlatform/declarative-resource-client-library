// Copyright 2023 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";
// All generated protos should be opaque, with "xxx_hidden_" prepended to their field names.


package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";


enum AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnum {
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumNO_VALUE_DO_NOT_USE = 0;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumRESOURCE_TYPE_UNSPECIFIED = 1;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumCONSUMER_PROJECT = 2;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumENCRYPTION_KEYS_PROJECT = 3;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumKEYRING = 4;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnumCONSUMER_FOLDER = 5;
}

enum AssuredworkloadsAlphaWorkloadComplianceRegimeEnum {
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumNO_VALUE_DO_NOT_USE = 0;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumCOMPLIANCE_REGIME_UNSPECIFIED = 1;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumIL4 = 2;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumCJIS = 3;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumFEDRAMP_HIGH = 4;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumFEDRAMP_MODERATE = 5;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnumUS_REGIONAL_ACCESS = 6;
}

enum AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnum {
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumNO_VALUE_DO_NOT_USE = 0;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumRESOURCE_TYPE_UNSPECIFIED = 1;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumCONSUMER_PROJECT = 2;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumENCRYPTION_KEYS_PROJECT = 3;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumKEYRING = 4;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnumCONSUMER_FOLDER = 5;
}

message AssuredworkloadsAlphaWorkload {
  string name = 1;
  string display_name = 2;
  repeated AssuredworkloadsAlphaWorkloadResources resources = 3;
  AssuredworkloadsAlphaWorkloadComplianceRegimeEnum compliance_regime = 4;
  string create_time = 5;
  string billing_account = 6;
  map<string, string> labels = 7;
  string provisioned_resources_parent = 8;
  AssuredworkloadsAlphaWorkloadKmsSettings kms_settings = 9;
  repeated AssuredworkloadsAlphaWorkloadResourceSettings resource_settings = 10;
  string organization = 11;
  string location = 12;
}

message AssuredworkloadsAlphaWorkloadResources {
  int64 resource_id = 1;
  AssuredworkloadsAlphaWorkloadResourcesResourceTypeEnum resource_type = 2;
}

message AssuredworkloadsAlphaWorkloadKmsSettings {
  string next_rotation_time = 1;
  string rotation_period = 2;
}

message AssuredworkloadsAlphaWorkloadResourceSettings {
  string resource_id = 1;
  AssuredworkloadsAlphaWorkloadResourceSettingsResourceTypeEnum resource_type = 2;
}

message ApplyAssuredworkloadsAlphaWorkloadRequest {
  AssuredworkloadsAlphaWorkload resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteAssuredworkloadsAlphaWorkloadRequest {
  string service_account_file = 1;
  AssuredworkloadsAlphaWorkload resource = 2;
}

message ListAssuredworkloadsAlphaWorkloadRequest {
  string service_account_file = 1;
  string Organization = 2;
  string Location = 3;
}

message ListAssuredworkloadsAlphaWorkloadResponse {
  repeated AssuredworkloadsAlphaWorkload items = 1;
}

service AssuredworkloadsAlphaWorkloadService {
  rpc ApplyAssuredworkloadsAlphaWorkload(ApplyAssuredworkloadsAlphaWorkloadRequest) returns (AssuredworkloadsAlphaWorkload);
  rpc DeleteAssuredworkloadsAlphaWorkload(DeleteAssuredworkloadsAlphaWorkloadRequest) returns (google.protobuf.Empty);
  rpc ListAssuredworkloadsAlphaWorkload(ListAssuredworkloadsAlphaWorkloadRequest) returns (ListAssuredworkloadsAlphaWorkloadResponse);
}
