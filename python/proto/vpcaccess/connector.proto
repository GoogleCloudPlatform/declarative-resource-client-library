// Copyright 2021 Google LLC. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package dcl;

import "proto/connector/sdk.proto";
import "proto/empty.proto";

enum VpcaccessConnectorStateEnum {
  VpcaccessConnectorStateEnumNO_VALUE_DO_NOT_USE = 0;
  VpcaccessConnectorStateEnumSTATE_UNSPECIFIED = 1;
  VpcaccessConnectorStateEnumREADY = 2;
  VpcaccessConnectorStateEnumCREATING = 3;
  VpcaccessConnectorStateEnumDELETING = 4;
  VpcaccessConnectorStateEnumERROR = 5;
  VpcaccessConnectorStateEnumUPDATING = 6;
}

message VpcaccessConnector {
  string name = 1;
  string network = 2;
  string ip_cidr_range = 3;
  int64 min_throughput = 4;
  int64 max_throughput = 5;
  string project = 6;
  string location = 7;
  VpcaccessConnectorStateEnum state = 8;
  string self_link = 9;
}

message ApplyVpcaccessConnectorRequest {
  VpcaccessConnector resource = 1;
  repeated LifecycleDirective lifecycle_directives = 2;
  string service_account_file = 3;
}

message DeleteVpcaccessConnectorRequest {
  string service_account_file = 1;
  VpcaccessConnector resource = 2;
}

message ListVpcaccessConnectorRequest {
  string service_account_file = 1;
  string Project = 2;
  string Location = 3;
}

message ListVpcaccessConnectorResponse {
  repeated VpcaccessConnector items = 1;
}
service VpcaccessConnectorService {
  rpc ApplyVpcaccessConnector(ApplyVpcaccessConnectorRequest) returns (VpcaccessConnector);
  rpc DeleteVpcaccessConnector(DeleteVpcaccessConnectorRequest) returns (google.protobuf.Empty);
  rpc ListVpcaccessConnector(ListVpcaccessConnectorRequest) returns (ListVpcaccessConnectorResponse);
}
